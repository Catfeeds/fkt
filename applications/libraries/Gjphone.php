<?php

/**
 * 电话号码识别.
 * @author by zsc for 2010.03.24
 */
//红色未加粗
//class Gjphone{
//  protected $imgPath;//图片路径
//  public $imgSize;//图片大小
//  protected $hecData;//分离后数组
//  protected $horData;//横向整理的数据
//  protected $verData;//纵向整理的数据
//
//  function __construct($path){
//      $this->imgPath = implode('',$path);
//  }
//
//
//  public function getArr()
//  {
//      return array(
//          0 => array(
//                    1 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,1,0,0,0,1,1,1,0),
//                    4 =>array(0,1,1,0,0,0,0,0,1,1,0),
//                    5 =>array(0,1,1,0,0,0,0,0,0,1,1),
//                    6 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    7 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    8 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    9 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    10=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    13=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    14=>array(0,1,1,0,0,0,0,0,1,1,0),
//                    15=>array(0,1,1,1,0,0,0,1,1,1,0),
//                    16=>array(0,0,1,1,1,1,1,1,1,0,0),
//                    17=>array(0,0,0,1,1,1,1,1,0,0,0),
//                    ),
//
//          1 => array(
//                    1 =>array(0,0,0,1,1,1,0,0,0,0),
//                    2 =>array(1,1,1,1,1,1,0,0,0,0),
//                    3 =>array(1,1,0,0,1,1,0,0,0,0),
//                    4 =>array(0,0,0,0,1,1,0,0,0,0),
//                    5 =>array(0,0,0,0,1,1,0,0,0,0),
//                    6 =>array(0,0,0,0,1,1,0,0,0,0),
//                    7 =>array(0,0,0,0,1,1,0,0,0,0),
//                    8 =>array(0,0,0,0,1,1,0,0,0,0),
//                    9 =>array(0,0,0,0,1,1,0,0,0,0),
//                    10=>array(0,0,0,0,1,1,0,0,0,0),
//                    11=>array(0,0,0,0,1,1,0,0,0,0),
//                    12=>array(0,0,0,0,1,1,0,0,0,0),
//                    13=>array(0,0,0,0,1,1,0,0,0,0),
//                    14=>array(0,0,0,0,1,1,0,0,0,0),
//                    15=>array(1,1,1,1,1,1,1,1,1,1),
//                    16=>array(1,1,1,1,1,1,1,1,1,1),
//                    ),
//
//          2 => array(
//                    1 =>array(0,0,1,1,1,1,1,1,0,0),
//                    2 =>array(0,1,1,1,1,1,1,1,1,0),
//                    3 =>array(0,1,0,0,0,0,0,1,1,1),
//                    4 =>array(0,0,0,0,0,0,0,0,1,1),
//                    5 =>array(0,0,0,0,0,0,0,0,1,1),
//                    6 =>array(0,0,0,0,0,0,0,0,1,1),
//                    7 =>array(0,0,0,0,0,0,0,0,1,0),
//                    8 =>array(0,0,0,0,0,0,0,1,1,0),
//                    9 =>array(0,0,0,0,0,0,1,1,0,0),
//                    10=>array(0,0,0,0,0,1,1,0,0,0),
//                    11=>array(0,0,0,0,1,1,0,0,0,0),
//                    12=>array(0,0,0,1,1,0,0,0,0,0),
//                    13=>array(0,0,1,1,0,0,0,0,0,0),
//                    14=>array(0,1,0,0,0,0,0,0,0,0),
//                    15=>array(1,1,1,1,1,1,1,1,1,1),
//                    16=>array(1,1,1,1,1,1,1,1,1,1),
//                    ),
//
//          3 => array(
//                    1 =>array(0,0,1,1,1,1,0,0,0),
//                    2 =>array(0,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,0,0,0,1,1,1,0),
//                    4 =>array(0,0,0,0,0,0,1,1,0),
//                    5 =>array(0,0,0,0,0,0,1,1,0),
//                    6 =>array(0,0,0,0,0,1,1,0,0),
//                    7 =>array(0,0,1,1,1,1,0,0,0),
//                    8 =>array(0,0,1,1,1,1,1,0,0),
//                    9 =>array(0,0,0,0,0,0,1,1,0),
//                    10=>array(0,0,0,0,0,0,0,1,1),
//                    11=>array(0,0,0,0,0,0,0,1,1),
//                    12=>array(0,0,0,0,0,0,0,1,1),
//                    13=>array(0,0,0,0,0,0,0,1,1),
//                    14=>array(1,0,0,0,0,0,1,1,0),
//                    15=>array(1,1,1,1,1,1,1,1,0),
//                    16=>array(0,1,1,1,1,1,0,0,0),
//                    ),
//              4=>array(
//                    1 =>array(0,0,0,0,0,0,1,1,1,0,0),
//                    2 =>array(0,0,0,0,0,0,1,1,1,0,0),
//                    3 =>array(0,0,0,0,0,1,1,1,1,0,0),
//                    4 =>array(0,0,0,0,1,1,0,1,1,0,0),
//                    5 =>array(0,0,0,0,1,0,0,1,1,0,0),
//                    6 =>array(0,0,0,1,1,0,0,1,1,0,0),
//                    7 =>array(0,0,1,1,0,0,0,1,1,0,0),
//                    8 =>array(0,0,1,1,0,0,0,1,1,0,0),
//                    9 =>array(0,1,1,0,0,0,0,1,1,0,0),
//                    10=>array(0,1,0,0,0,0,0,1,1,0,0),
//                    11=>array(1,1,1,1,1,1,1,1,1,1,1),
//                    12=>array(1,1,1,1,1,1,1,1,1,1,1),
//                    13=>array(0,0,0,0,0,0,0,1,1,0,0),
//                    14=>array(0,0,0,0,0,0,0,1,1,0,0),
//                    15=>array(0,0,0,0,0,0,0,1,1,0,0),
//                    16=>array(0,0,0,0,0,0,0,1,1,0,0),
//                    17=>array(0,0,0,0,0,0,0,1,1,0,0),
//                    ),
//              5=>array(
//                    1 =>array(0,1,1,1,1,1,1,1,1,0),
//                    2 =>array(0,1,1,1,1,1,1,1,1,0),
//                    3 =>array(0,1,1,0,0,0,0,0,0,0),
//                    4 =>array(0,1,1,0,0,0,0,0,0,0),
//                    5 =>array(0,1,1,0,0,0,0,0,0,0),
//                    6 =>array(0,1,1,0,0,0,0,0,0,0),
//                    7 =>array(0,1,1,1,1,1,1,0,0,0),
//                    8 =>array(0,1,1,1,1,1,1,1,1,0),
//                    9 =>array(0,0,0,0,0,0,1,1,1,0),
//                    10=>array(0,0,0,0,0,0,0,1,1,1),
//                    11=>array(0,0,0,0,0,0,0,0,1,1),
//                    12=>array(0,0,0,0,0,0,0,0,1,1),
//                    13=>array(0,0,0,0,0,0,0,0,1,1),
//                    14=>array(0,0,0,0,0,0,0,1,1,1),
//                    15=>array(1,0,0,0,0,0,1,1,1,0),
//                    16=>array(1,1,1,1,1,1,1,1,0,0),
//                    17=>array(0,1,1,1,1,1,1,0,0,0),
//                    ),
//              6=>array(
//                    1 =>array(0,0,0,0,1,1,1,1,1,0),
//                    2 =>array(0,0,0,1,1,1,1,1,1,0),
//                    3 =>array(0,0,1,1,1,0,0,0,0,0),
//                    4 =>array(0,1,1,0,0,0,0,0,0,0),
//                    5 =>array(0,1,1,0,0,0,0,0,0,0),
//                    6 =>array(1,1,0,0,0,0,0,0,0,0),
//                    7 =>array(1,1,0,0,1,1,1,1,0,0),
//                    8 =>array(1,1,0,1,1,1,1,1,1,0),
//                    9 =>array(1,1,1,0,0,0,0,1,1,1),
//                    10=>array(1,1,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,1,1),
//                    13=>array(0,1,0,0,0,0,0,0,1,1),
//                    14=>array(0,1,1,0,0,0,0,1,1,0),
//                    15=>array(0,0,1,1,1,1,1,1,1,0),
//                    16=>array(0,0,0,1,1,1,1,0,0,0),
//                    ),
//              7=>array(
//                    1 =>array(1,1,1,1,1,1,1,1,1,1),
//                    2 =>array(1,1,1,1,1,1,1,1,1,1),
//                    3 =>array(0,0,0,0,0,0,0,0,1,0),
//                    4 =>array(0,0,0,0,0,0,0,1,1,0),
//                    5 =>array(0,0,0,0,0,0,0,1,1,0),
//                    6 =>array(0,0,0,0,0,0,0,1,0,0),
//                    7 =>array(0,0,0,0,0,0,1,1,0,0),
//                    8 =>array(0,0,0,0,0,0,1,0,0,0),
//                    9 =>array(0,0,0,0,0,1,1,0,0,0),
//                    10=>array(0,0,0,0,0,1,1,0,0,0),
//                    11=>array(0,0,0,0,1,1,0,0,0,0),
//                    12=>array(0,0,0,0,1,1,0,0,0,0),
//                    13=>array(0,0,0,0,1,0,0,0,0,0),
//                    14=>array(0,0,0,1,1,0,0,0,0,0),
//                    15=>array(0,0,0,1,1,0,0,0,0,0),
//                    16=>array(0,0,1,1,0,0,0,0,0,0),
//                    ),
//              8=>array(
//                    1 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,1,0,0,0,1,1,1,0),
//                    4 =>array(0,1,1,0,0,0,0,0,1,1,0),
//                    5 =>array(0,1,1,0,0,0,0,0,1,1,0),
//                    6 =>array(0,1,1,0,0,0,0,0,1,1,0),
//                    7 =>array(0,0,1,1,0,0,0,1,1,0,0),
//                    8 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    9 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    10=>array(0,1,1,1,0,0,0,1,1,1,0),
//                    11=>array(0,1,1,0,0,0,0,0,1,1,0),
//                    12=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    13=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    14=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    15=>array(1,1,1,0,0,0,0,0,1,1,0),
//                    16=>array(0,1,1,1,1,1,1,1,1,1,0),
//                    17=>array(0,0,0,1,1,1,1,1,0,0,0),
//                    ),
//              9=>array(
//                    1 =>array(0,0,0,1,1,1,1,0,0,0),
//                    2 =>array(0,1,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,0,0,0,0,1,1,0),
//                    4 =>array(1,1,0,0,0,0,0,0,1,1),
//                    5 =>array(1,1,0,0,0,0,0,0,1,1),
//                    6 =>array(1,1,0,0,0,0,0,0,1,1),
//                    7 =>array(1,1,0,0,0,0,0,0,1,1),
//                    8 =>array(0,1,1,0,0,0,0,1,1,1),
//                    9 =>array(0,1,1,1,1,1,1,0,1,1),
//                    10=>array(0,0,1,1,1,1,0,0,1,1),
//                    11=>array(0,0,0,0,0,0,0,0,1,1),
//                    12=>array(0,0,0,0,0,0,0,1,1,0),
//                    13=>array(0,0,0,0,0,0,0,1,1,0),
//                    14=>array(0,0,0,0,0,0,1,1,0,0),
//                    15=>array(0,1,1,1,1,1,1,1,0,0),
//                    16=>array(0,1,1,1,1,1,0,0,0,0),
//                    ),
//              10=>array(
//                    1 =>array(0,0,0,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,1,0,0,1,1,1,0),
//                    4 =>array(0,1,1,0,0,0,0,1,1,0),
//                    5 =>array(1,1,0,0,0,0,0,0,1,1),
//                    6 =>array(1,1,0,0,0,0,0,0,1,1),
//                    7 =>array(1,1,0,0,0,0,0,0,1,1),
//                    8 =>array(1,1,0,0,0,0,0,0,1,1),
//                    9 =>array(1,1,0,0,0,0,0,0,1,1),
//                    10=>array(1,1,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,1,1),
//                    13=>array(0,1,1,0,0,0,0,1,1,0),
//                    14=>array(0,1,1,1,0,0,1,1,1,0),
//                    15=>array(0,0,1,1,1,1,1,1,0,0),
//                    16=>array(0,0,0,1,1,1,1,0,0,0),
//                    ),
//              11=>array(
//                    1 =>array(0,0,0,0,0,1,0,0,0,0),
//                    2 =>array(0,0,1,1,1,1,0,0,0,0),
//                    3 =>array(1,1,1,1,1,1,0,0,0,0),
//                    4 =>array(1,0,0,0,1,1,0,0,0,0),
//                    5 =>array(0,0,0,0,1,1,0,0,0,0),
//                    6 =>array(0,0,0,0,1,1,0,0,0,0),
//                    7 =>array(0,0,0,0,1,1,0,0,0,0),
//                    8 =>array(0,0,0,0,1,1,0,0,0,0),
//                    9 =>array(0,0,0,0,1,1,0,0,0,0),
//                    10=>array(0,0,0,0,1,1,0,0,0,0),
//                    11=>array(0,0,0,0,1,1,0,0,0,0),
//                    12=>array(0,0,0,0,1,1,0,0,0,0),
//                    13=>array(0,0,0,0,1,1,0,0,0,0),
//                    14=>array(0,0,0,0,1,1,0,0,0,0),
//                    15=>array(0,0,0,0,1,1,0,0,0,0),
//                    16=>array(1,1,1,1,1,1,1,1,1,1),
//                    17=>array(1,1,1,1,1,1,1,1,1,1),
//                    ),
//              12=>array(
//                    1 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,1,1,0),
//                    3 =>array(0,1,1,0,0,0,0,0,1,1,1),
//                    4 =>array(0,1,0,0,0,0,0,0,0,1,1),
//                    5 =>array(0,0,0,0,0,0,0,0,0,1,1),
//                    6 =>array(0,0,0,0,0,0,0,0,0,1,1),
//                    7 =>array(0,0,0,0,0,0,0,0,0,1,1),
//                    8 =>array(0,0,0,0,0,0,0,0,1,1,0),
//                    9 =>array(0,0,0,0,0,0,0,1,1,0,0),
//                    10=>array(0,0,0,0,0,0,1,1,0,0,0),
//                    11=>array(0,0,0,0,0,1,1,0,0,0,0),
//                    12=>array(0,0,0,0,1,1,0,0,0,0,0),
//                    13=>array(0,0,0,1,1,0,0,0,0,0,0),
//                    14=>array(0,0,1,1,0,0,0,0,0,0,0),
//                    15=>array(0,1,1,0,0,0,0,0,0,0,0),
//                    16=>array(1,1,1,1,1,1,1,1,1,1,1),
//                    17=>array(1,1,1,1,1,1,1,1,1,1,1),
//                    ),
//              13=>array(
//                    1 =>array(0,0,1,1,1,1,0,0,0),
//                    2 =>array(0,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,0,0,0,1,1,1,0),
//                    4 =>array(0,0,0,0,0,0,1,1,0),
//                    5 =>array(0,0,0,0,0,0,1,1,0),
//                    6 =>array(0,0,0,0,0,0,1,1,0),
//                    7 =>array(0,0,0,0,0,1,1,0,0),
//                    8 =>array(0,0,1,1,1,1,0,0,0),
//                    9 =>array(0,0,1,1,1,1,1,0,0),
//                    10=>array(0,0,0,0,0,0,1,1,0),
//                    11=>array(0,0,0,0,0,0,0,1,1),
//                    12=>array(0,0,0,0,0,0,0,1,1),
//                    13=>array(0,0,0,0,0,0,0,1,1),
//                    14=>array(0,0,0,0,0,0,0,1,1),
//                    15=>array(1,0,0,0,0,0,1,1,0),
//                    16=>array(1,1,1,1,1,1,1,1,0),
//                    17=>array(0,1,1,1,1,1,0,0,0),
//                    ),
//              14=>array(
//                    1 =>array(0,0,0,0,0,0,1,1,1,0,0),
//                    2 =>array(0,0,0,0,0,0,1,1,1,0,0),
//                    3 =>array(0,0,0,0,0,1,1,1,1,0,0),
//                    4 =>array(0,0,0,0,1,1,0,1,1,0,0),
//                    5 =>array(0,0,0,0,1,0,0,1,1,0,0),
//                    6 =>array(0,0,0,1,1,0,0,1,1,0,0),
//                    7 =>array(0,0,1,1,0,0,0,1,1,0,0),
//                    8 =>array(0,0,1,0,0,0,0,1,1,0,0),
//                    9 =>array(0,1,1,0,0,0,0,1,1,0,0),
//                    10=>array(0,1,0,0,0,0,0,1,1,0,0),
//                    11=>array(1,1,1,1,1,1,1,1,1,1,1),
//                    12=>array(1,1,1,1,1,1,1,1,1,1,1),
//                    13=>array(0,0,0,0,0,0,0,1,1,0,0),
//                    14=>array(0,0,0,0,0,0,0,1,1,0,0),
//                    15=>array(0,0,0,0,0,0,0,1,1,0,0),
//                    16=>array(0,0,0,0,0,0,0,1,1,0,0),
//                    ),
//              15=>array(
//                    1 =>array(0,1,1,1,1,1,1,1,1,0),
//                    2 =>array(0,1,1,1,1,1,1,1,1,0),
//                    3 =>array(0,1,1,0,0,0,0,0,0,0),
//                    4 =>array(0,1,1,0,0,0,0,0,0,0),
//                    5 =>array(0,1,1,0,0,0,0,0,0,0),
//                    6 =>array(0,1,1,0,0,0,0,0,0,0),
//                    7 =>array(0,1,1,1,1,1,1,0,0,0),
//                    8 =>array(0,1,1,1,1,1,1,1,1,0),
//                    9 =>array(0,0,0,0,0,0,1,1,1,0),
//                    10=>array(0,0,0,0,0,0,0,0,1,1),
//                    11=>array(0,0,0,0,0,0,0,0,1,1),
//                    12=>array(0,0,0,0,0,0,0,0,1,1),
//                    13=>array(0,0,0,0,0,0,0,1,1,1),
//                    14=>array(1,0,0,0,0,0,1,1,1,0),
//                    15=>array(1,1,1,1,1,1,1,1,0,0),
//                    16=>array(0,1,1,1,1,1,1,0,0,0),
//                    ),
//              16=>array(
//                    1 =>array(0,0,0,0,0,1,1,1,1,1,0),
//                    2 =>array(0,0,0,1,1,1,1,1,1,1,0),
//                    3 =>array(0,0,1,1,1,0,0,0,0,0,0),
//                    4 =>array(0,1,1,1,0,0,0,0,0,0,0),
//                    5 =>array(0,1,1,0,0,0,0,0,0,0,0),
//                    6 =>array(0,1,0,0,0,0,0,0,0,0,0),
//                    7 =>array(1,1,0,0,1,1,1,1,0,0,0),
//                    8 =>array(1,1,0,1,1,1,1,1,1,1,0),
//                    9 =>array(1,1,1,1,0,0,0,0,1,1,0),
//                    10=>array(1,1,1,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    13=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    14=>array(0,1,1,0,0,0,0,0,1,1,1),
//                    15=>array(0,1,1,1,0,0,0,1,1,1,0),
//                    16=>array(0,0,1,1,1,1,1,1,1,0,0),
//                    17=>array(0,0,0,1,1,1,1,1,0,0,0),
//                    ),
//              17=>array(
//                    1 =>array(1,1,1,1,1,1,1,1,1,1,1),
//                    2 =>array(1,1,1,1,1,1,1,1,1,1,1),
//                    3 =>array(0,0,0,0,0,0,0,0,0,1,0),
//                    4 =>array(0,0,0,0,0,0,0,0,1,1,0),
//                    5 =>array(0,0,0,0,0,0,0,0,1,0,0),
//                    6 =>array(0,0,0,0,0,0,0,1,1,0,0),
//                    7 =>array(0,0,0,0,0,0,0,1,1,0,0),
//                    8 =>array(0,0,0,0,0,0,1,1,0,0,0),
//                    9 =>array(0,0,0,0,0,0,1,1,0,0,0),
//                    10=>array(0,0,0,0,0,0,1,0,0,0,0),
//                    11=>array(0,0,0,0,0,1,1,0,0,0,0),
//                    12=>array(0,0,0,0,0,1,0,0,0,0,0),
//                    13=>array(0,0,0,0,1,1,0,0,0,0,0),
//                    14=>array(0,0,0,0,1,1,0,0,0,0,0),
//                    15=>array(0,0,0,1,1,0,0,0,0,0,0),
//                    16=>array(0,0,0,1,1,0,0,0,0,0,0),
//                    17=>array(0,0,1,1,0,0,0,0,0,0,0),
//                    ),
//              18=>array(
//                    1 =>array(0,0,0,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,1,0,0,1,1,1,0),
//                    4 =>array(0,1,1,0,0,0,0,1,1,0),
//                    5 =>array(0,1,1,0,0,0,0,1,1,0),
//                    6 =>array(0,1,1,0,0,0,0,1,1,0),
//                    7 =>array(0,0,1,1,0,0,1,1,0,0),
//                    8 =>array(0,0,0,1,1,1,1,0,0,0),
//                    9 =>array(0,0,0,1,1,1,1,0,0,0),
//                    10=>array(0,1,1,1,0,0,1,1,1,0),
//                    11=>array(1,1,0,0,0,0,0,1,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,1,1),
//                    13=>array(1,1,0,0,0,0,0,0,1,1),
//                    14=>array(1,1,1,0,0,0,0,1,1,1),
//                    15=>array(0,1,1,1,1,1,1,1,1,0),
//                    16=>array(0,0,1,1,1,1,1,0,0,0),
//                    ),
//              19=>array(
//                    1 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,1,0,0,0,1,1,1,0),
//                    4 =>array(1,1,1,0,0,0,0,0,1,1,0),
//                    5 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    6 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    7 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    8 =>array(1,1,1,0,0,0,0,0,0,1,1),
//                    9 =>array(0,1,1,1,0,0,0,0,1,1,1),
//                    10=>array(0,1,1,1,1,1,1,1,0,1,1),
//                    11=>array(0,0,0,1,1,1,1,0,0,1,1),
//                    12=>array(0,0,0,0,0,0,0,0,0,1,1),
//                    13=>array(0,0,0,0,0,0,0,0,1,1,0),
//                    14=>array(0,0,0,0,0,0,0,0,1,1,0),
//                    15=>array(0,1,0,0,0,0,1,1,1,0,0),
//                    16=>array(0,1,1,1,1,1,1,1,0,0,0),
//                    17=>array(0,1,1,1,1,1,1,0,0,0,0),
//                    )
//      );
//  }
//
//  public function getSArr()
//  {
//      return array(
//              0 => array(
//                        1 =>array(2,2,0,1,1,1,1,1,0),
//                        2 =>array(2,2,1,1,1,1,1,1,1),
//                        3 =>array(2,1,1,1,0,0,0,1,1,1),
//                        8 =>array(1,1,0,0,0,0,0,0,0,1),
//                        9 =>array(1,1,0,0,0,0,0,0,0,1)
//                        ),
//
//              1 => array(
//                        2 =>array(1,1,1,1,1,1),
//                        3 =>array(1,1,0,0,1,1),
//                        15=>array(1,1,1,1,1,1,1,1,1),
//                        16=>array(1,1,1,1,1,1,1,1,1),
//                        ),
//
//              2 => array(
//                        3 =>array(2,1,0,0,0,0,0,1,1,1),
//                        15=>array(1,1,1,1,1,1,1,1,1,1),
//                        16=>array(1,1,1,1,1,1,1,1,1,1)
//                        ),
//
//              3 => array(
//                        8 =>array(2,0,1,1,1,1,1,0),
//                        9 =>array(2,0,0,0,0,0,1,1)
//                        ),
//              4 => array(
//                        10=>array(2,1,0,0,0,0,0,1,1),
//                        11=>array(1,1,1,1,1,1,1,1,1),
//                        12=>array(1,1,1,1,1,1,1,1,1)
//                        ),
//              5 => array(
//                        1 =>array(2,1,1,1,1,1,1,1,1),
//                        2 =>array(2,1,1,1,1,1,1,1,1),
//                        8 =>array(2,1,1,1,1,1,1,1,1),
//                        15=>array(1,2,2,0,0,0,1,1,1),
//                        ),
//              6 => array(
//                        7 =>array(1,1,0,0,1,1,1,1),
//                        8 =>array(1,1,0,1,1,1,1,1,1)
//                        ),
//              7 => array(
//                        1 =>array(1,1,1,1,1,1,1,1),
//                        2 =>array(1,1,1,1,1,1,1,1),
//                        3 =>array(2,2,0,0,0,0,0,1),
//                        4 =>array(2,2,0,0,0,0,1,1),
//                        5 =>array(2,2,0,0,0,0,1,1),
//                        6 =>array(2,2,0,0,0,0,1),
//                        7 =>array(2,2,0,0,0,1,1),
//                        8 =>array(2,2,0,0,0,1)
//                        ),
//              8 => array(
//                        5 =>array(2,1,1,0,0,0,0,0,1),
//                        6 =>array(2,1,1,0,0,0,0,0,1),
//                        7 =>array(2,0,1,1,0,0,0,1,1),
//                        8 =>array(2,2,0,1,1,1,1,1,0),
//                        9 =>array(2,2,0,1,1,1,1,1,0)
//                        ),
//              9 => array(
//                        5 =>array(1,1,0,0,0,0,0,0,1),
//                        6 =>array(1,1,0,0,0,0,0,0,1),
//                        9 =>array(2,1,1,1,1,1,1,0,1),
//                        10=>array(2,0,1,1,1,1,0,0,1)
//                        ),
//              10=> array(
//                        1 =>array(2,0,0,1,1,1,1,0,0),
//                        2 =>array(2,0,1,1,1,1,1,1,0),
//                        3 =>array(2,1,1,1,0,0,1,1,1),
//                        8 =>array(1,1,0,0,0,0,0,0,1),
//                        9 =>array(1,1,0,0,0,0,0,0,1)
//                        ),
//              11=> array(
//                        1 =>array(2,2,0,0,0,1),
//                        2 =>array(2,2,1,1,1,1),
//                        3 =>array(1,1,1,1,1,1),
//                        16=>array(1,1,1,1,1,1,1,1,1),
//                        17=>array(1,1,1,1,1,1,1,1,1)
//                        ),
//              12=> array(
//                        3 =>array(2,1,1,0,0,0,0,0,1,1),
//                        16=>array(1,1,1,1,1,1,1,1,1,1),
//                        17=>array(1,1,1,1,1,1,1,1,1,1)
//                        ),
//              13=> array(
//                        8 =>array(2,2,1,1,1,1,0),
//                        9 =>array(2,2,1,1,1,1,1),
//                        10=>array(2,2,0,0,0,0,1,1)
//                        ),
//              14=> array(
//                        10=>array(2,1,0,0,0,0,0,1,1),
//                        11=>array(1,1,1,1,1,1,1,1,1),
//                        12=>array(1,1,1,1,1,1,1,1,1)
//                        ),
//              15=> array(
//                        1 =>array(2,1,1,1,1,1,1,1,1),
//                        2 =>array(2,1,1,1,1,1,1,1,1),
//                        8 =>array(2,1,1,1,1,1,1,1,1),
//                        14=>array(1,2,2,0,0,0,1,1,1)
//                        ),
//              16=> array(
//                        7 =>array(1,1,0,0,1,1,1,1,0),
//                        8 =>array(1,1,0,1,1,1,1,1,1,1)
//                        ),
//              17=> array(
//                        1 =>array(1,1,1,1,1,1,1,1,1),
//                        2 =>array(1,1,1,1,1,1,1,1,1),
//                        3 =>array(2,2,2,0,0,0,0,0,1),
//                        4 =>array(2,2,2,0,0,0,0,1,1),
//                        5 =>array(2,2,2,0,0,0,0,1),
//                        6 =>array(2,2,2,0,0,0,1,1),
//                        7 =>array(2,2,2,0,0,0,1,1),
//                        8 =>array(2,2,2,0,0,1,1,0)
//                        ),
//              18=> array(
//                        5 =>array(2,1,1,0,0,0,0,1),
//                        6 =>array(2,1,1,0,0,0,0,1),
//                        7 =>array(2,0,1,1,0,0,1,1),
//                        8 =>array(2,2,0,1,1,1,1,0),
//                        9 =>array(2,2,0,1,1,1,1,0)
//                        ),
//              19=> array(
//                        5 =>array(1,1,0,0,0,0,0,0,0,1),
//                        6 =>array(1,1,0,0,0,0,0,0,0,1),
//                        9 =>array(2,1,1,1,0,0,0,0,1,1),
//                        10=>array(2,1,1,1,1,1,1,1,0,1)
//                        )
//      );
//  }
//
//    public function mgArr($pec, $data, $limit){
//        global $debug;
//
//        $mgarr = $this->getArr();
//        $mgsarr = $this->getSArr();
//
//        $temp = array();
//        foreach($mgarr as $num=>$arr)
//        {
//            foreach($arr as $key=>$val)
//            {
//                foreach($val as $k=>$v)
//                {
//                    if($k <= 2) continue;
//                    if($k >= $limit) break;
//
//                    ++$temp[$num]['total'];
//                    if($data[$key][$k] == $v)
//                    {
//                        ++$temp[$num]['num'];
//                        //echo $v != 0 ? $data[$key][$k].$v.'  ' : "<font style='color:#FFF;'>".$data[$key][$k].$v."</font>  ";
//                    }
//                    else
//                    {
//                        //echo "<font style='color:#FFF;'>".$data[$key][$k].$v."</font>  ";
//                    }
//                }
//                //echo '<br />';
//            }
//            //echo $temp[$num]['num']/$temp[$num]['total'];
//            //echo '<br />';
//        }
//
//        $return = $tempmax = $max = 0;
//        foreach($temp as $tkey=>$tval)
//        {
//            $tempmax = floatval($tval['num'] / $tval['total']);
//            $return = $tempmax > $max ? $tkey : $return;
//            $max = $tempmax > $max ? $tempmax : $max;
//        }
//
//        $return = $max < $pec ? -1 : ($return > 9 ? $return - 10 : $return);
//        //echo $return >= 0 ?"<font style='color:#FFF;'>".$max."</font> " : '';
//        //echo '<br /><br />';
//        if($debug == 1) echo "<br/><br/>";
//        if($debug == 1) $this->drawWH($data);
//        //echo '<font style="color:red;">(';echo $return;echo ')</font>';
//
//        if($return >= 0)
//        {
//            foreach($mgsarr as $nownum=>$mgsarr_)
//            {
//                //if($nownum != 1)
//                //{
//                //    continue;
//                //}
//                //echo '<font style="color:red;">[';echo $nownum;echo ']</font>';
//
//                $linenum = $linerightnum = 0;
//                foreach($mgsarr_ as $mgskey=>$mgsval)
//                {
//                    if($debug == 1)echo '<br />';
//                    ++$linenum;
//                    //echo "<br />[[$mgskey]]";
//                    $rownum = $rowrightnum = 0;
//                    foreach($mgsval as $mgk=>$mgv)
//                    {
//                        if($debug == 1)echo '{'.$data[$mgskey][$mgk].'-'.$mgv.'}';
//                        if($mgv == 2)
//                        {
//                            continue;
//                        }
//
//                        ++$rownum;
//                        if($data[$mgskey][$mgk] == $mgv)
//                        {
//                            ++$rowrightnum;
//                        }
//                    }
//                    $linerightnum = $rownum > 0 && $rownum == $rowrightnum ? $linerightnum + 1 : $linerightnum;
//                    //echo '<font style="color:green;">[';echo $totalnum.'-'.$rightnum;echo ']</font>';
//                }
//                if($debug == 1){ echo '<br />('.$nownum.')<font style="color:green;">[';echo $linenum.'-'.$linerightnum;echo ']</font>';}
//                if($linenum > 0 && $linenum == $linerightnum)
//                {
//                    return $nownum > 9 ? $nownum - 10 : $nownum;
//                }
//            }
//
//            $return = -1;
//        }
//
//        return $return;
//    }
//
//    public function getSize()
//    {
//        return getimagesize($this->imgPath);
//    }
//
//    /**
//     * 颜色分离转换...
//     *
//     * @param unknown_type $path
//     * @return unknown
//     */
//      public function getHec()
//        {
//            $size = $this->getSize();
//            $res = imagecreatefromgif($this->imgPath);
//            for($i=0; $i < $size[1]; ++$i)
//            {
//                for($j=0; $j < $size[0]; ++$j)
//                {
//                    $rgb = imagecolorat($res,$j,$i);
//                    $rgbarray = imagecolorsforindex($res, $rgb);
//                    if($rgbarray['red'] < 125 || $rgbarray['green']<125
//                    || $rgbarray['blue'] < 125)
//                    {
//                        $data[$i][$j]=1;
//                    }else{
//                        $data[$i][$j]=0;
//                    }
//                }
//            }
//            $this->imgSize = $size;
//            $this->hecData = $data;
//        }
//    /**
//     * 颜色分离后的数据横向整理...
//     *
//     * @return unknown
//     */
//    public function magHorData($start, $limit, $passfirst = false)
//    {
//
//        $data = $this->hecData;
//        $size = $this->imgSize;
//        $z = 0;
//
//        for($i=0; $i<$size[1]; ++$i)
//        {
//            $iarr = array();
//            $ilength = 0;
//            foreach($data[$i] as $key=>$idata)
//            {
//                if($key >= $start)
//                {
//                    if($ilength < $limit)
//                    {
//                        $iarr[] = $idata;
//                        $ilength++;
//                    }
//                    else
//                    {
//                        break;
//                    }
//                }
//            }
//            if(in_array('1',$iarr)){
//                $z++;
//                for($j=0; $j<$limit; ++$j)
//                {
//                    if($iarr[$j] == '1'){
//                       $newdata[$z][$j] = 1;
//                    }else{
//                       $newdata[$z][$j] = 0;
//                    }
//                }
//           }
//
//        }
//
//        if($passfirst == true)
//        {
//            unset($newdata[1]);
//            $temparr = array();
//            $temp = 1;
//            foreach($newdata as $newval)
//            {
//                $temparr[$temp] = $newval;
//                ++$temp;
//            }
//            $newdata = $temparr;
//        }
//
//        //print_r($newdata);exit;
//        return $this->horData = $newdata;
//    }
//    /**
//     * 整理纵向数据...
//     *
//     * @return unknown
//     */
//    public function magVerData($newdata){
//        for ($i=0;$i<132;++$i){
//            for($j=1;$j<13;++$j){
//                $ndata[$i][$j] = $newdata[$j][$i];
//            }
//        }
//
//
//        $sum = count($ndata);
//        $c = 0;
//        for ($a=0;$a<$sum;$a++){
//            $value = $ndata[$a];
//            if(in_array(1,$value)){
//                  $ndatas[$c] = $value;
//                  $c++;
//            }elseif(is_array($ndatas)){
//              $b = $c-1;
//              if(in_array(1,$ndatas[$b])){
//                  $ndatas[$c] = $value;
//                  $c++;
//              }
//            }
//        }
//
//        return $this->verData = $ndatas;
//
//    }
//    /**
//     * 显示电话号码...
//     *
//     * @return unknown
//     */
//    public function showPhone($ndatas){
//        $phone = null;
//        $d = 0;
//        foreach ($ndatas as $key => $val){
//            if(in_array(1,$val)){
//                foreach ($val as $k => $v){
//                   $ndArr[$d].=$v;
//                }
//            }
//            if(!in_array(1,$val)){
//                $d++;
//            }
//        }
//       foreach ($ndArr as $key01 =>$val01){
//            $phone .= $this->initData($val01);
//       }
//       return $phone;
//    }
//    /**
//     * 分离显示...
//     *
//     * @param unknown_type $dataArr
//     */
//    function drawWH($dataArr){
//        if(is_array($dataArr)){
//            foreach ($dataArr as $key => $val){
//                foreach ($val as $k => $v){
//                    if($v == 0){
//                        $c .= "<font color='#FFFFFF'>".$v."</font>";
//                    }else{
//                      $c .= $v;
//                    }
//                }
//                $c .= "<br/>";
//            }
//        }
//        echo $c;
//    }
//
//}
//红色加租
//class Gjphone{
//  protected $imgPath;//图片路径
//  public $imgSize;//图片大小
//  protected $hecData;//分离后数组
//  protected $horData;//横向整理的数据
//  protected $verData;//纵向整理的数据
//
//  function __construct($path){
//      $this->imgPath = implode('',$path);
//  }
//
//  public function getArr()
//  {
//      return array(
//              0=>array(
//                    1 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,1,0,0,0,1,1,1,0),
//                    4 =>array(0,1,1,0,0,0,0,0,1,1,0),
//                    5 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    6 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    7 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    8 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    9 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    10=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    13=>array(0,1,1,0,0,0,0,0,1,1,0),
//                    14=>array(0,1,1,1,0,0,0,1,1,1,0),
//                    15=>array(0,0,1,1,1,1,1,1,1,0,0),
//                    16=>array(0,0,0,1,1,1,1,1,0,0,0)
//                ),
//
//              1=>array(
//                    1 =>array(0,0,0,0,0,1,1,0,0,0,0),
//                    2 =>array(1,1,1,1,1,1,1,0,0,0,0),
//                    3 =>array(1,1,1,1,1,1,1,0,0,0,0),
//                    4 =>array(0,0,0,0,0,1,1,0,0,0,0),
//                    5 =>array(0,0,0,0,0,1,1,0,0,0,0),
//                    6 =>array(0,0,0,0,0,1,1,0,0,0,0),
//                    7 =>array(0,0,0,0,0,1,1,0,0,0,0),
//                    8 =>array(0,0,0,0,0,1,1,0,0,0,0),
//                    9 =>array(0,0,0,0,0,1,1,0,0,0,0),
//                    10=>array(0,0,0,0,0,1,1,0,0,0,0),
//                    11=>array(0,0,0,0,0,1,1,0,0,0,0),
//                    12=>array(0,0,0,0,0,1,1,0,0,0,0),
//                    13=>array(0,0,0,0,0,1,1,0,0,0,0),
//                    14=>array(0,0,0,0,0,1,1,0,0,0,0),
//                    15=>array(0,1,1,1,1,1,1,1,1,1,1),
//                    16=>array(0,1,1,1,1,1,1,1,1,1,1)
//                ),
//
//              2=>array(
//                    1 =>array(0,0,0,1,1,1,1,0,0,0),
//                    2 =>array(0,1,1,1,1,1,1,1,1,0),
//                    3 =>array(0,1,1,0,0,0,0,1,1,1),
//                    4 =>array(1,1,0,0,0,0,0,0,1,1),
//                    5 =>array(1,1,0,0,0,0,0,0,1,1),
//                    6 =>array(1,1,0,0,0,0,0,0,1,1),
//                    7 =>array(0,0,0,0,0,0,0,0,1,0),
//                    8 =>array(0,0,0,0,0,0,0,1,1,0),
//                    9 =>array(0,0,0,0,0,0,1,1,0,0),
//                    10=>array(0,0,0,0,1,1,1,0,0,0),
//                    11=>array(0,0,0,1,1,0,0,0,0,0),
//                    12=>array(0,0,1,1,0,0,0,0,0,0),
//                    13=>array(0,1,1,0,0,0,0,0,1,1),
//                    14=>array(0,1,0,0,0,0,0,0,1,1),
//                    15=>array(1,1,1,1,1,1,1,1,1,1),
//                    16=>array(1,1,1,1,1,1,1,1,1,1)
//                ),
//
//              3=>array(
//                    1 =>array(0,0,1,1,1,1,1,0,0),
//                    2 =>array(0,1,1,1,1,1,1,1,0),
//                    3 =>array(1,1,1,0,0,0,1,1,1),
//                    4 =>array(1,1,0,0,0,0,0,1,1),
//                    5 =>array(0,0,0,0,0,0,0,1,1),
//                    6 =>array(0,0,0,0,0,0,0,1,1),
//                    7 =>array(0,0,0,0,0,0,1,1,0),
//                    8 =>array(0,0,0,0,1,1,1,0,0),
//                    9 =>array(0,0,0,0,1,1,1,1,0),
//                    10=>array(0,0,0,0,0,0,1,1,0),
//                    11=>array(0,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,1,1),
//                    13=>array(1,1,0,0,0,0,0,1,1),
//                    14=>array(1,1,1,0,0,0,1,1,1),
//                    15=>array(0,1,1,1,1,1,1,1,0),
//                    16=>array(0,0,1,1,1,1,1,0,0)
//                ),
//
//              4=>array(
//                    1 =>array(0,0,0,0,0,0,0,1,1,0,0,0),
//                    2 =>array(0,0,0,0,0,0,1,1,1,0,0,0),
//                    3 =>array(0,0,0,0,0,1,1,1,1,0,0,0),
//                    4 =>array(0,0,0,0,1,1,0,1,1,0,0,0),
//                    5 =>array(0,0,0,0,1,0,0,1,1,0,0,0),
//                    6 =>array(0,0,0,1,0,0,0,1,1,0,0,0),
//                    7 =>array(0,0,1,1,0,0,0,1,1,0,0,0),
//                    8 =>array(0,1,1,0,0,0,0,1,1,0,0,0),
//                    9 =>array(1,1,0,0,0,0,0,1,1,0,0,0),
//                    10=>array(1,1,1,1,1,1,1,1,1,1,1,1),
//                    11=>array(1,1,1,1,1,1,1,1,1,1,1,1),
//                    12=>array(0,0,0,0,0,0,0,1,1,0,0,0),
//                    13=>array(0,0,0,0,0,0,0,1,1,0,0,0),
//                    14=>array(0,0,0,0,0,0,0,1,1,0,0,0),
//                    15=>array(0,0,0,0,1,1,1,1,1,1,1,1),
//                    16=>array(0,0,0,0,1,1,1,1,1,1,1,1)
//                ),
//
//              5=>array(
//                    1 =>array(0,1,1,1,1,1,1,1,1,1),
//                    2 =>array(0,1,1,1,1,1,1,1,1,1),
//                    3 =>array(0,1,1,0,0,0,0,0,0,0),
//                    4 =>array(0,1,1,0,0,0,0,0,0,0),
//                    5 =>array(0,1,1,0,0,0,0,0,0,0),
//                    6 =>array(0,1,1,0,1,1,1,1,0,0),
//                    7 =>array(0,1,1,1,1,1,1,1,1,0),
//                    8 =>array(0,1,1,0,0,0,0,1,1,0),
//                    9 =>array(0,0,0,0,0,0,0,0,1,1),
//                    10=>array(0,0,0,0,0,0,0,0,1,1),
//                    11=>array(0,0,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,1,1),
//                    13=>array(1,1,0,0,0,0,0,0,1,1),
//                    14=>array(1,1,1,0,0,0,0,1,1,0),
//                    15=>array(0,1,1,1,1,1,1,1,0,0),
//                    16=>array(0,0,0,1,1,1,1,0,0,0)
//                ),
//
//              6=>array(
//                    1 =>array(0,0,0,0,1,1,1,1,1,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,1,1,0),
//                    3 =>array(0,1,1,1,0,0,0,0,1,1,1),
//                    4 =>array(0,1,1,0,0,0,0,0,0,1,1),
//                    5 =>array(0,1,1,0,0,0,0,0,0,0,0),
//                    6 =>array(1,1,0,0,0,0,0,0,0,0,0),
//                    7 =>array(1,1,0,0,1,1,1,1,0,0,0),
//                    8 =>array(1,1,0,1,1,1,1,1,1,1,0),
//                    9 =>array(1,1,1,0,0,0,0,0,1,1,0),
//                    10=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    13=>array(0,1,1,0,0,0,0,0,0,1,1),
//                    14=>array(0,1,1,1,0,0,0,0,1,1,0),
//                    15=>array(0,0,1,1,1,1,1,1,1,1,0),
//                    16=>array(0,0,0,1,1,1,1,1,0,0,0)
//                ),
//
//              7=>array(
//                    1 =>array(1,1,1,1,1,1,1,1,1),
//                    2 =>array(1,1,1,1,1,1,1,1,1),
//                    3 =>array(1,1,0,0,0,0,0,1,1),
//                    4 =>array(1,1,0,0,0,0,0,1,1),
//                    5 =>array(0,0,0,0,0,0,1,1,0),
//                    6 =>array(0,0,0,0,0,0,1,1,0),
//                    7 =>array(0,0,0,0,0,0,1,1,0),
//                    8 =>array(0,0,0,0,0,1,1,0,0),
//                    9 =>array(0,0,0,0,0,1,1,0,0),
//                    10=>array(0,0,0,0,0,1,1,0,0),
//                    11=>array(0,0,0,0,1,1,0,0,0),
//                    12=>array(0,0,0,0,1,1,0,0,0),
//                    13=>array(0,0,0,0,1,1,0,0,0),
//                    14=>array(0,0,0,0,1,1,0,0,0),
//                    15=>array(0,0,0,1,1,0,0,0,0),
//                    16=>array(0,0,0,1,1,0,0,0,0)
//                ),
//
//              8=>array(
//                    1 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,1,0,0,0,1,1,1,0),
//                    4 =>array(0,1,1,0,0,0,0,0,1,1,0),
//                    5 =>array(0,1,1,0,0,0,0,0,1,1,0),
//                    6 =>array(0,0,1,1,0,0,0,1,1,0,0),
//                    7 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    8 =>array(0,0,1,1,1,1,1,1,1,0,0),
//                    9 =>array(0,1,1,0,0,0,0,0,1,1,0),
//                    10=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    13=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    14=>array(0,1,1,0,0,0,0,0,1,1,0),
//                    15=>array(0,1,1,1,1,1,1,1,1,1,0),
//                    16=>array(0,0,0,1,1,1,1,1,0,0,0)
//                ),
//
//              9=>array(
//                    1 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,1,0,0,0,1,1,1,0),
//                    4 =>array(1,1,1,0,0,0,0,0,1,1,0),
//                    5 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    6 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    7 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    8 =>array(1,1,0,0,0,0,0,0,1,1,1),
//                    9 =>array(0,1,1,0,0,0,0,1,1,1,1),
//                    10=>array(0,1,1,1,1,1,1,1,1,1,1),
//                    11=>array(0,0,0,1,1,1,1,0,0,1,1),
//                    12=>array(0,0,0,0,0,0,0,0,0,1,0),
//                    13=>array(1,1,0,0,0,0,0,0,1,1,0),
//                    14=>array(1,1,1,0,0,0,0,1,1,1,0),
//                    15=>array(0,1,1,1,1,1,1,1,1,0,0),
//                    16=>array(0,0,1,1,1,1,1,0,0,0,0)
//                ),
//
//              10=>array(
//                    1 =>array(0,0,0,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,1,0,0,1,1,1,0),
//                    4 =>array(0,1,1,0,0,0,0,1,1,0),
//                    5 =>array(1,1,0,0,0,0,0,0,1,1),
//                    6 =>array(1,1,0,0,0,0,0,0,1,1),
//                    7 =>array(1,1,0,0,0,0,0,0,1,1),
//                    8 =>array(1,1,0,0,0,0,0,0,1,1),
//                    9 =>array(1,1,0,0,0,0,0,0,1,1),
//                    10=>array(1,1,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,1,1),
//                    13=>array(0,1,1,0,0,0,0,1,1,0),
//                    14=>array(0,1,1,1,0,0,1,1,1,0),
//                    15=>array(0,0,1,1,1,1,1,1,0,0),
//                    16=>array(0,0,0,1,1,1,1,0,0,0)
//                ),
//
//              11=>array(
//                    1 =>array(0,0,0,0,1,1,0,0,0,0),
//                    2 =>array(1,1,1,1,1,1,0,0,0,0),
//                    3 =>array(1,1,1,1,1,1,0,0,0,0),
//                    4 =>array(0,0,0,0,1,1,0,0,0,0),
//                    5 =>array(0,0,0,0,1,1,0,0,0,0),
//                    6 =>array(0,0,0,0,1,1,0,0,0,0),
//                    7 =>array(0,0,0,0,1,1,0,0,0,0),
//                    8 =>array(0,0,0,0,1,1,0,0,0,0),
//                    9 =>array(0,0,0,0,1,1,0,0,0,0),
//                    10=>array(0,0,0,0,1,1,0,0,0,0),
//                    11=>array(0,0,0,0,1,1,0,0,0,0),
//                    12=>array(0,0,0,0,1,1,0,0,0,0),
//                    13=>array(0,0,0,0,1,1,0,0,0,0),
//                    14=>array(0,0,0,0,1,1,0,0,0,0),
//                    15=>array(0,1,1,1,1,1,1,1,1,1),
//                    16=>array(0,1,1,1,1,1,1,1,1,1)
//                ),
//
//              12=>array(
//                    1 =>array(0,0,0,1,1,1,1,0,0,0),
//                    2 =>array(0,1,1,1,1,1,1,1,1,0),
//                    3 =>array(0,1,1,0,0,0,0,1,1,1),
//                    4 =>array(1,1,0,0,0,0,0,0,1,1),
//                    5 =>array(1,1,0,0,0,0,0,0,1,1),
//                    6 =>array(1,1,0,0,0,0,0,0,1,1),
//                    7 =>array(0,0,0,0,0,0,0,0,1,0),
//                    8 =>array(0,0,0,0,0,0,0,1,1,0),
//                    9 =>array(0,0,0,0,0,0,1,1,0,0),
//                    10=>array(0,0,0,0,1,1,1,0,0,0),
//                    11=>array(0,0,0,1,1,0,0,0,0,0),
//                    12=>array(0,0,1,1,0,0,0,0,0,0),
//                    13=>array(0,1,1,0,0,0,0,0,0,0),
//                    14=>array(0,1,0,0,0,0,0,0,1,1),
//                    15=>array(1,1,1,1,1,1,1,1,1,1),
//                    16=>array(1,1,1,1,1,1,1,1,1,1)
//                ),
//
//              13=>array(
//                    1 =>array(0,0,1,1,1,1,1,1,0,0),
//                    2 =>array(0,1,1,1,1,1,1,1,1,0),
//                    3 =>array(1,1,1,0,0,0,0,1,1,1),
//                    4 =>array(1,1,0,0,0,0,0,0,1,1),
//                    5 =>array(0,0,0,0,0,0,0,0,1,1),
//                    6 =>array(0,0,0,0,0,0,0,1,1,0),
//                    7 =>array(0,0,0,0,0,1,1,1,0,0),
//                    8 =>array(0,0,0,0,0,1,1,1,0,0),
//                    9 =>array(0,0,0,0,0,0,0,1,1,0),
//                    10=>array(0,0,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,1,1),
//                    13=>array(1,1,0,0,0,0,0,0,1,1),
//                    14=>array(0,1,1,0,0,0,0,1,1,0),
//                    15=>array(0,1,1,1,1,1,1,1,1,0),
//                    16=>array(0,0,0,1,1,1,1,0,0,0)
//                ),
//
//              14=>array(
//                    1 =>array(0,0,0,0,0,0,0,1,1,0,0,0),
//                    2 =>array(0,0,0,0,0,0,1,1,1,0,0,0),
//                    3 =>array(0,0,0,0,0,0,1,1,1,0,0,0),
//                    4 =>array(0,0,0,0,0,1,0,1,1,0,0,0),
//                    5 =>array(0,0,0,0,1,0,0,1,1,0,0,0),
//                    6 =>array(0,0,0,1,1,0,0,1,1,0,0,0),
//                    7 =>array(0,0,0,1,0,0,0,1,1,0,0,0),
//                    8 =>array(0,0,1,1,0,0,0,1,1,0,0,0),
//                    9 =>array(0,1,1,0,0,0,0,1,1,0,0,0),
//                    10=>array(1,1,0,0,0,0,0,1,1,0,0,0),
//                    11=>array(1,1,1,1,1,1,1,1,1,1,1,1),
//                    12=>array(1,1,1,1,1,1,1,1,1,1,1,1),
//                    13=>array(0,0,0,0,0,0,0,1,1,0,0,0),
//                    14=>array(0,0,0,0,0,0,0,1,1,0,0,0),
//                    15=>array(0,0,0,0,1,1,1,1,1,1,1,1),
//                    16=>array(0,0,0,0,1,1,1,1,1,1,1,1)
//                ),
//
//              15=>array(
//                    1 =>array(1,1,1,1,1,1,1,1,1),
//                    2 =>array(1,1,1,1,1,1,1,1,1),
//                    3 =>array(1,1,0,0,0,0,0,0,0),
//                    4 =>array(1,1,0,0,0,0,0,0,0),
//                    5 =>array(1,1,0,0,0,0,0,0,0),
//                    6 =>array(1,1,0,0,0,0,0,0,0),
//                    7 =>array(1,1,0,1,1,1,1,0,0),
//                    8 =>array(1,1,1,1,1,1,1,1,0),
//                    9 =>array(1,1,0,0,0,0,1,1,1),
//                    10=>array(0,0,0,0,0,0,0,1,1),
//                    11=>array(0,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,1,1),
//                    13=>array(1,1,0,0,0,0,0,1,1),
//                    14=>array(1,1,1,0,0,0,1,1,0),
//                    15=>array(0,1,1,1,1,1,1,1,0),
//                    16=>array(0,0,1,1,1,1,1,0,0)
//                ),
//
//              16=>array(
//                    1 =>array(0,0,0,0,1,1,1,1,1,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,1,1,0),
//                    3 =>array(0,1,1,1,0,0,0,0,1,1,1),
//                    4 =>array(0,1,1,0,0,0,0,0,0,1,1),
//                    5 =>array(0,1,1,0,0,0,0,0,0,0,0),
//                    6 =>array(1,1,0,0,1,1,1,1,0,0,0),
//                    7 =>array(1,1,0,1,1,1,1,1,1,1,0),
//                    8 =>array(1,1,1,1,0,0,0,0,1,1,0),
//                    9 =>array(1,1,1,0,0,0,0,0,0,1,1),
//                    10=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,0,1,1),
//                    13=>array(0,1,1,0,0,0,0,0,1,1,1),
//                    14=>array(0,1,1,1,0,0,0,1,1,1,0),
//                    15=>array(0,0,1,1,1,1,1,1,1,0,0),
//                    16=>array(0,0,0,1,1,1,1,1,0,0,0)
//                ),
//
//              17=>array(
//                    1 =>array(1,1,1,1,1,1,1,1,1),
//                    2 =>array(1,1,1,1,1,1,1,1,1),
//                    3 =>array(1,1,0,0,0,0,0,1,1),
//                    4 =>array(0,0,0,0,0,0,0,1,1),
//                    5 =>array(0,0,0,0,0,0,1,1,0),
//                    6 =>array(0,0,0,0,0,0,1,1,0),
//                    7 =>array(0,0,0,0,0,0,1,1,0),
//                    8 =>array(0,0,0,0,0,1,1,0,0),
//                    9 =>array(0,0,0,0,0,1,1,0,0),
//                    10=>array(0,0,0,0,0,1,1,0,0),
//                    11=>array(0,0,0,0,1,1,0,0,0),
//                    12=>array(0,0,0,0,1,1,0,0,0),
//                    13=>array(0,0,0,0,1,1,0,0,0),
//                    14=>array(0,0,0,0,1,1,0,0,0),
//                    15=>array(0,0,0,1,1,0,0,0,0),
//                    16=>array(0,0,0,1,1,0,0,0,0)
//                ),
//
//              18=>array(
//                    1 =>array(0,0,0,1,1,1,1,1,1,0,0,0),
//                    2 =>array(0,0,1,1,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,1,0,0,0,0,1,1,1,0),
//                    4 =>array(0,1,1,0,0,0,0,0,0,1,1,0),
//                    5 =>array(0,1,1,0,0,0,0,0,0,1,1,0),
//                    6 =>array(0,0,1,1,0,0,0,0,1,1,0,0),
//                    7 =>array(0,0,0,1,1,1,1,1,1,0,0,0),
//                    8 =>array(0,0,1,1,1,1,1,1,1,1,0,0),
//                    9 =>array(0,1,1,1,0,0,0,0,1,1,1,0),
//                    10=>array(1,1,0,0,0,0,0,0,0,0,1,1),
//                    11=>array(1,1,0,0,0,0,0,0,0,0,1,1),
//                    12=>array(1,1,0,0,0,0,0,0,0,0,1,1),
//                    13=>array(1,1,0,0,0,0,0,0,0,0,1,1),
//                    14=>array(0,1,1,1,0,0,0,0,1,1,1,0),
//                    15=>array(0,0,1,1,1,1,1,1,1,1,1,0),
//                    16=>array(0,0,0,1,1,1,1,1,1,0,0,0)
//                ),
//
//              19=>array(
//                    1 =>array(0,0,0,1,1,1,1,1,0,0,0),
//                    2 =>array(0,1,1,1,1,1,1,1,1,0,0),
//                    3 =>array(0,1,1,0,0,0,0,1,1,1,0),
//                    4 =>array(1,1,0,0,0,0,0,0,1,1,0),
//                    5 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    6 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    7 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                    8 =>array(0,1,1,0,0,0,0,0,1,1,1),
//                    9 =>array(0,1,1,1,1,1,1,1,1,1,1),
//                    10=>array(0,0,0,1,1,1,1,0,0,1,1),
//                    11=>array(0,0,0,0,0,0,0,0,0,1,1),
//                    12=>array(0,0,0,0,0,0,0,0,1,1,0),
//                    13=>array(1,1,0,0,0,0,0,0,1,1,0),
//                    14=>array(1,1,1,0,0,0,0,1,1,1,0),
//                    15=>array(0,1,1,1,1,1,1,1,1,0,0),
//                    16=>array(0,0,1,1,1,1,1,0,0,0,0)
//                )
//      );
//  }
//
//  public function getSArr()
//  {
//      return array(
//              0 => array(
//                        1 =>array(2,2,2,1,1,1,1,1,0),
//                        2 =>array(2,2,1,1,1,1,1,1,1),
//                        3 =>array(2,1,1,1,0,0,0,1,1,1),
//                        8 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                        9 =>array(1,1,0,0,0,0,0,0,0,1,1)
//                        ),
//
//              1 => array(
//                        2 =>array(1,1,1,1,1,1,1,0),
//                        3 =>array(1,1,1,1,1,1,1,0),
//                        15=>array(2,1,1,1,1,1,1,1,1,1,1),
//                        16=>array(2,1,1,1,1,1,1,1,1,1,1)
//                        ),
//
//              2 => array(
//                        3 =>array(2,1,1,0,0,0,0,1,1,1),
//                        15=>array(1,1,1,1,1,1,1,1,1,1),
//                        16=>array(1,1,1,1,1,1,1,1,1,1)
//                        ),
//
//              3 => array(
//                        7 =>array(2,2,0,0,0,0,1,1),
//                        8 =>array(2,2,0,0,1,1,1,0),
//                        9 =>array(2,2,0,0,1,1,1,1)
//                        ),
//              4 => array(
//                        10=>array(1,1,1,1,1,1,1,1,1,1,1),
//                        11=>array(1,1,1,1,1,1,1,1,1,1,1),
//                        12=>array(2,2,2,0,0,0,0,1,1),
//                        15=>array(2,2,2,2,1,1,1,1,1,1,1),
//                        16=>array(2,2,2,2,1,1,1,1,1,1,1)
//                        ),
//              5 => array(
//                        1 =>array(2,1,1,1,1,1,1,1,1,1),
//                        2 =>array(2,1,1,1,1,1,1,1,1,1),
//                        8 =>array(2,1,1,0,0,0,0,1,1),
//                        15=>array(2,1,1,1,1,1,1,1)
//                        ),
//              6 => array(
//                        7 =>array(1,1,0,0,1,1,1,1,0),
//                        8 =>array(1,1,0,1,1,1,1,1,1,1),
//                        9 =>array(1,1,1,0,0,0,0,0,1,1),
//                        10=>array(1,1,0,0,0,0,0,0,0,1,1)
//                        ),
//              7 => array(
//                        1 =>array(1,1,1,1,1,1,1,1,1),
//                        2 =>array(1,1,1,1,1,1,1,1,1),
//                        3 =>array(1,1,0,0,0,0,0,1,1),
//                        4 =>array(1,1,0,0,0,0,0,1,1),
//                        5 =>array(2,2,0,0,0,0,1,1),
//                        6 =>array(2,2,0,0,0,0,1,1)
//                        ),
//              8 => array(
//                        5 =>array(2,1,1,0,0,0,0,0,1,1),
//                        6 =>array(2,2,1,1,0,0,0,1,1),
//                        7 =>array(2,2,0,1,1,1,1,1,0),
//                        8 =>array(2,2,1,1,1,1,1,1,1),
//                        9 =>array(2,1,1,0,0,0,0,0,1,1),
//                        10=>array(1,1,0,0,0,0,0,0,0,1,1)
//                        ),
//              9 => array(
//                        5 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                        6 =>array(1,1,0,0,0,0,0,0,0,1,1),
//                        9 =>array(2,1,1,0,0,0,0,1,1,1,1),
//                        10=>array(2,1,1,1,1,1,1,1,1,1,1),
//                        11=>array(2,2,0,1,1,1,1,0,0,1,1)
//                        ),
//              10=> array(
//                        1 =>array(2,2,0,1,1,1,1,0),
//                        2 =>array(2,2,1,1,1,1,1,1),
//                        3 =>array(2,1,1,1,0,0,1,1,1),
//                        8 =>array(1,1,0,0,0,0,0,0,1,1),
//                        9 =>array(1,1,0,0,0,0,0,0,1,1)
//                        ),
//              11=> array(
//                        1 =>array(2,2,0,0,1,1),
//                        2 =>array(1,1,1,1,1,1),
//                        3 =>array(1,1,1,1,1,1),
//                        15=>array(2,1,1,1,1,1,1,1,1,1),
//                        16=>array(2,1,1,1,1,1,1,1,1,1)
//                        ),
//              12=> array(
//                        2 =>array(2,1,1,1,1,1,1,1,1),
//                        3 =>array(2,1,1,0,0,0,0,1,1,1),
//                        15=>array(1,1,1,1,1,1,1,1,1,1),
//                        16=>array(1,1,1,1,1,1,1,1,1,1)
//                        ),
//              13=> array(
//                        6 =>array(2,2,0,0,0,0,0,1,1),
//                        7 =>array(2,2,0,0,0,1,1,1),
//                        8 =>array(2,2,0,0,0,1,1,1),
//                        9 =>array(2,2,0,0,0,0,0,1,1),
//                        10=>array(2,2,0,0,0,0,0,0,1,1)
//                        ),
//              14=> array(
//                        9 =>array(2,1,1,0,0,0,0,1,1,0),
//                        10=>array(1,1,0,0,0,0,0,1,1,0),
//                        11=>array(1,1,1,1,1,1,1,1,1,1,1),
//                        12=>array(1,1,1,1,1,1,1,1,1,1,1),
//                        13=>array(2,2,0,0,0,0,1,1,0)
//                        ),
//              15=> array(
//                        1 =>array(1,1,1,1,1,1,1,1,1),
//                        2 =>array(1,1,1,1,1,1,1,1,1),
//                        7 =>array(1,1,0,1,1,1,1),
//                        8 =>array(1,1,1,1,1,1,1,1),
//                        14=>array(1,1,1,0,0,0,1,1)
//                        ),
//              16=> array(
//                        4 =>array(2,1,1,0,0,0,0,0,2,1,1),
//                        5 =>array(2,1,1,0,0,0,0,0),
//                        6 =>array(1,1,0,0,1,1,1,1),
//                        7 =>array(1,1,0,1,1,1,1,1,1,1),
//                        8 =>array(1,1,1,1,0,0,0,0,1,1),
//                        9 =>array(1,1,1,0,0,0,0,0,0,1,1)
//                        ),
//              17=> array(
//                        1 =>array(1,1,1,1,1,1,1,1,1),
//                        2 =>array(1,1,1,1,1,1,1,1,1),
//                        3 =>array(1,1,0,0,0,0,2,1,1),
//                        4 =>array(2,2,0,0,0,0,2,1,1),
//                        5 =>array(2,2,0,0,0,0,1,1),
//                        6 =>array(2,2,0,0,0,0,1,1),
//                        7 =>array(2,2,0,0,0,0,1,1)
//                        ),
//              18=> array(
//                        6 =>array(2,2,1,1,0,0,0,0,1,1),
//                        7 =>array(2,2,0,1,1,1,1,1,1,0),
//                        8 =>array(2,2,1,1,1,1,1,1,1,1),
//                        9 =>array(2,1,1,1,0,0,0,0,1,1,1),
//                        10=>array(1,1,0,0,0,0,0,0,0,0,1)
//                        ),
//              19=> array(
//                        8 =>array(2,1,1,0,0,0,0,0,1,1,1),
//                        9 =>array(2,1,1,1,1,1,1,1,1,1,1),
//                        10=>array(2,2,0,1,1,1,1,0,0,1,1),
//                        11=>array(2,2,0,0,0,0,0,0,0,1,1),
//                        12=>array(2,2,0,0,0,0,0,0,1,1)
//                        )
//      );
//  }
//
//    public function mgArr($pec, $data, $limit){
//        global $debug;
//
//        $mgarr = $this->getArr();
//        $mgsarr = $this->getSArr();
//
//        $temp = array();
//
//        foreach($mgarr as $num=>$arr)
//        {
//            foreach($arr as $key=>$val)
//            {
//                foreach($val as $k=>$v)
//                {
//                    if($k <= 2) continue;
//                    if($k >= $limit) break;
//
//                    ++$temp[$num]['total'];
//                    if($data[$key][$k] == $v)
//                    {
//                        ++$temp[$num]['num'];
//                        //echo $v != 0 ? $data[$key][$k].$v.'  ' : "<font style='color:#FFF;'>".$data[$key][$k].$v."</font>  ";
//                    }
//                    else
//                    {
//                        //echo "<font style='color:#FFF;'>".$data[$key][$k].$v."</font>  ";
//                    }
//                }
//                //echo '<br />';
//            }
//            //echo $temp[$num]['num']/$temp[$num]['total'];
//            //echo '<br />';
//        }
//
//        $return = $tempmax = $max = 0;
//        foreach($temp as $tkey=>$tval)
//        {
//            $tempmax = floatval($tval['num'] / $tval['total']);
//            $return = $tempmax > $max ? $tkey : $return;
//            $max = $tempmax > $max ? $tempmax : $max;
//        }
//
//        $return = $max < $pec ? -1 : ($return > 9 ? $return - 10 : $return);
//        //echo $return >= 0 ?"<font style='color:#FFF;'>".$max."</font> " : '';
//        //echo '<br /><br />';
//        if($debug == 1) echo "<br/><br/>";
//        if($debug == 1) $this->drawWH($data);
//        //echo '<font style="color:red;">(';echo $return;echo ')</font>';
//
//        if($return >= 0)
//        {
//            foreach($mgsarr as $nownum=>$mgsarr_)
//            {
//                //if($nownum != 1)
//                //{
//                //    continue;
//                //}
//                //echo '<font style="color:red;">[';echo $nownum;echo ']</font>';
//
//                $linenum = $linerightnum = 0;
//                foreach($mgsarr_ as $mgskey=>$mgsval)
//                {
//                    if($debug == 1)echo '<br />';
//                    ++$linenum;
//                    //echo "<br />[[$mgskey]]";
//                    $rownum = $rowrightnum = 0;
//                    foreach($mgsval as $mgk=>$mgv)
//                    {
//                        if($debug == 1)echo '{'.$data[$mgskey][$mgk].'-'.$mgv.'}';
//                        if($mgv == 2)
//                        {
//                            continue;
//                        }
//
//                        ++$rownum;
//                        if($data[$mgskey][$mgk] == $mgv)
//                        {
//                            ++$rowrightnum;
//                        }
//                    }
//                    $linerightnum = $rownum > 0 && $rownum == $rowrightnum ? $linerightnum + 1 : $linerightnum;
//                    //echo '<font style="color:green;">[';echo $totalnum.'-'.$rightnum;echo ']</font>';
//                }
//                if($debug == 1){ echo '<br />('.$nownum.')<font style="color:green;">[';echo $linenum.'-'.$linerightnum;echo ']</font>';}
//                if($linenum > 0 && $linenum == $linerightnum)
//                {
//                    return $nownum > 9 ? $nownum - 10 : $nownum;
//                }
//            }
//
//            $return = -1;
//        }
//
//        return $return;
//    }
//
//    public function getSize()
//    {
//        return getimagesize($this->imgPath);
//    }
//
//    /**
//     * 颜色分离转换...
//     *
//     * @param unknown_type $path
//     * @return unknown
//     */
//      public function getHec()
//        {
//            $size = $this->getSize();
//            $res = imagecreatefromgif($this->imgPath);
//            for($i=0; $i < $size[1]; ++$i)
//            {
//                for($j=0; $j < $size[0]; ++$j)
//                {
//                    $rgb = imagecolorat($res,$j,$i);
//                    $rgbarray = imagecolorsforindex($res, $rgb);
//                    if($rgbarray['red'] < 125 || $rgbarray['green']<125
//                    || $rgbarray['blue'] < 125)
//                    {
//                        $data[$i][$j]=1;
//                    }else{
//                        $data[$i][$j]=0;
//                    }
//                }
//            }
//            $this->imgSize = $size;
//            $this->hecData = $data;
//        }
//    /**
//     * 颜色分离后的数据横向整理...
//     *
//     * @return unknown
//     */
//    public function magHorData($start, $limit, $passfirst = false)
//    {
//
//        $data = $this->hecData;
//        $size = $this->imgSize;
//        $z = 0;
//
//        for($i=0; $i<$size[1]; ++$i)
//        {
//            $iarr = array();
//            $ilength = 0;
//            foreach($data[$i] as $key=>$idata)
//            {
//                if($key >= $start)
//                {
//                    if($ilength < $limit)
//                    {
//                        $iarr[] = $idata;
//                        $ilength++;
//                    }
//                    else
//                    {
//                        break;
//                    }
//                }
//            }
//            if(in_array('1',$iarr)){
//                $z++;
//                for($j=0; $j<$limit; ++$j)
//                {
//                    if($iarr[$j] == '1'){
//                       $newdata[$z][$j] = 1;
//                    }else{
//                       $newdata[$z][$j] = 0;
//                    }
//                }
//           }
//
//        }
//
//        if($passfirst == true)
//        {
//            unset($newdata[1]);
//            $temparr = array();
//            $temp = 1;
//            foreach($newdata as $newval)
//            {
//                $temparr[$temp] = $newval;
//                ++$temp;
//            }
//            $newdata = $temparr;
//        }
//
//        //print_r($newdata);exit;
//        return $this->horData = $newdata;
//    }
//    /**
//     * 整理纵向数据...
//     *
//     * @return unknown
//     */
//    public function magVerData($newdata){
//        for ($i=0;$i<132;++$i){
//            for($j=1;$j<13;++$j){
//                $ndata[$i][$j] = $newdata[$j][$i];
//            }
//        }
//
//
//        $sum = count($ndata);
//        $c = 0;
//        for ($a=0;$a<$sum;$a++){
//            $value = $ndata[$a];
//            if(in_array(1,$value)){
//                  $ndatas[$c] = $value;
//                  $c++;
//            }elseif(is_array($ndatas)){
//              $b = $c-1;
//              if(in_array(1,$ndatas[$b])){
//                  $ndatas[$c] = $value;
//                  $c++;
//              }
//            }
//        }
//
//        return $this->verData = $ndatas;
//
//    }
//    /**
//     * 显示电话号码...
//     *
//     * @return unknown
//     */
//    public function showPhone($ndatas){
//        $phone = null;
//        $d = 0;
//        foreach ($ndatas as $key => $val){
//            if(in_array(1,$val)){
//                foreach ($val as $k => $v){
//                   $ndArr[$d].=$v;
//                }
//            }
//            if(!in_array(1,$val)){
//                $d++;
//            }
//        }
//       foreach ($ndArr as $key01 =>$val01){
//            $phone .= $this->initData($val01);
//       }
//       return $phone;
//    }
//    /**
//     * 分离显示...
//     *
//     * @param unknown_type $dataArr
//     */
//    function drawWH($dataArr){
//        if(is_array($dataArr)){
//            foreach ($dataArr as $key => $val){
//                foreach ($val as $k => $v){
//                    if($v == 0){
//                        $c .= "<font color='#FFFFFF'>".$v."</font>";
//                    }else{
//                      $c .= $v;
//                    }
//                }
//                $c .= "<br/>";
//            }
//        }
//        echo $c;
//    }
//
//}
//粉红色拉长不加粗
//class Gjphone {
//
//    protected $imgPath; //图片路径
//    public $imgSize; //图片大小
//    protected $hecData; //分离后数组
//    protected $horData; //横向整理的数据
//    protected $verData; //纵向整理的数据
//
//    function __construct($path) {
//        $this->imgPath = implode('',$path);
//    }
//
//    public function getArr() {
//        return array(
//            0 => array(
//                1 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                2 => array(0, 0, 1, 1, 0, 0, 1, 1, 0, 0),
//                3 => array(0, 1, 1, 0, 0, 0, 0, 1, 0, 0),
//                4 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                6 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                7 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                8 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                14 => array(1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                15 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                16 => array(0, 1, 1, 0, 0, 0, 0, 1, 0, 0),
//                17 => array(0, 0, 1, 1, 0, 0, 1, 1, 0, 0),
//                18 => array(0, 0, 0, 1, 1, 1, 0, 0, 0, 0)
//            ),
//            1 => array(
//                1 => array(0, 0, 1, 1, 0, 0),
//                2 => array(1, 1, 1, 1, 0, 0),
//                3 => array(0, 0, 1, 1, 0, 0),
//                4 => array(0, 0, 1, 1, 0, 0),
//                5 => array(0, 0, 1, 1, 0, 0),
//                6 => array(0, 0, 1, 1, 0, 0),
//                7 => array(0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 1, 1, 0, 0),
//                9 => array(0, 0, 1, 1, 0, 0),
//                10 => array(0, 0, 1, 1, 0, 0),
//                11 => array(0, 0, 1, 1, 0, 0),
//                12 => array(0, 0, 1, 1, 0, 0),
//                13 => array(0, 0, 1, 1, 0, 0),
//                14 => array(0, 0, 1, 1, 0, 0),
//                15 => array(0, 0, 1, 1, 0, 0),
//                16 => array(0, 0, 1, 1, 0, 0),
//                17 => array(0, 1, 1, 1, 0, 0),
//                18 => array(1, 1, 1, 1, 1, 1)
//            ),
//            2 => array(
//                1 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                2 => array(0, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                3 => array(0, 1, 0, 0, 0, 0, 1, 1, 0, 0),
//                4 => array(1, 1, 0, 0, 0, 0, 1, 1, 1, 0),
//                5 => array(1, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                6 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                7 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                8 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                9 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                10 => array(0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
//                11 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                12 => array(0, 0, 0, 0, 0, 1, 0, 0, 0, 0),
//                13 => array(0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
//                14 => array(0, 0, 0, 1, 0, 0, 0, 0, 0, 0),
//                15 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 1),
//                16 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 0),
//                17 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                18 => array(0, 1, 1, 1, 1, 1, 1, 1, 0, 0)
//            ),
//            3 => array(
//                1 => array(0, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 1, 1, 0, 0, 0, 1, 1, 0, 0),
//                3 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                4 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                6 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                7 => array(0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
//                8 => array(0, 0, 0, 0, 1, 1, 1, 0, 0, 0),
//                9 => array(0, 0, 0, 0, 1, 1, 1, 1, 0, 0),
//                10 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                11 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                13 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                14 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                15 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                16 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                17 => array(1, 1, 1, 1, 0, 1, 1, 0, 0, 0),
//                18 => array(0, 1, 1, 1, 1, 0, 0, 0, 0, 0)
//            ),
//            4 => array(
//                1 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                2 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                3 => array(0, 0, 0, 0, 0, 1, 1, 1, 0, 0),
//                4 => array(0, 0, 0, 0, 0, 1, 1, 1, 0, 0),
//                5 => array(0, 0, 0, 0, 1, 0, 1, 1, 0, 0),
//                6 => array(0, 0, 0, 0, 1, 0, 1, 1, 0, 0),
//                7 => array(0, 0, 0, 1, 0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 1, 1, 0, 0, 1, 1, 0, 0),
//                9 => array(0, 0, 1, 0, 0, 0, 1, 1, 0, 0),
//                10 => array(0, 1, 0, 0, 0, 0, 1, 1, 0, 0),
//                11 => array(1, 1, 0, 0, 0, 0, 1, 1, 0, 0),
//                12 => array(1, 1, 0, 0, 0, 0, 1, 1, 0, 0),
//                13 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                14 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                15 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                16 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                17 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0)
//            ),
//            5 => array(
//                1 => array(0, 0, 0, 0, 0, 0, 0, 0, 1),
//                2 => array(0, 0, 0, 1, 1, 1, 1, 1, 1),
//                3 => array(0, 0, 0, 1, 0, 0, 0, 0, 0),
//                4 => array(0, 0, 1, 1, 0, 0, 0, 0, 0),
//                5 => array(0, 0, 1, 0, 0, 0, 0, 0, 0),
//                6 => array(0, 1, 1, 1, 1, 0, 0, 0, 0),
//                7 => array(0, 1, 1, 1, 1, 1, 1, 0, 0),
//                8 => array(0, 0, 0, 0, 1, 1, 1, 1, 0),
//                9 => array(0, 0, 0, 0, 0, 0, 1, 1, 0),
//                10 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 0, 1),
//                13 => array(0, 0, 0, 0, 0, 0, 0, 0, 1),
//                14 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
//                15 => array(0, 0, 0, 0, 0, 0, 0, 1, 0),
//                16 => array(0, 0, 0, 0, 0, 0, 0, 1, 0),
//                17 => array(1, 1, 1, 1, 1, 1, 1, 0, 0),
//                18 => array(0, 1, 1, 1, 1, 0, 0, 0, 0)
//            ),
//            6 => array(
//                1 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                2 => array(0, 0, 0, 0, 0, 1, 1, 1, 0, 0),
//                3 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                4 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
//                5 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
//                6 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
//                7 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
//                8 => array(1, 1, 0, 1, 1, 1, 1, 1, 0, 0),
//                9 => array(1, 1, 1, 1, 0, 0, 1, 1, 1, 0),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                11 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                14 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                15 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                16 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                17 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 0),
//                18 => array(0, 0, 1, 1, 0, 0, 0, 1, 0, 0),
//                19 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            7 => array(
//                1 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                2 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                3 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                4 => array(1, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                5 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                6 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                7 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                8 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                9 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                10 => array(0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
//                11 => array(0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
//                12 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                13 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                14 => array(0, 0, 0, 0, 0, 1, 0, 0, 0, 0),
//                15 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                16 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                17 => array(0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
//                18 => array(0, 0, 0, 0, 1, 0, 0, 0, 0, 0)
//            )
//            ,
//            8 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 0, 0, 0, 0),
//                2 => array(0, 0, 1, 0, 0, 0, 1, 1, 0, 0),
//                3 => array(0, 1, 0, 0, 0, 0, 0, 1, 0, 0),
//                4 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                6 => array(0, 1, 0, 0, 0, 0, 0, 1, 0, 0),
//                7 => array(0, 1, 1, 0, 0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                9 => array(0, 0, 0, 1, 1, 1, 0, 0, 0, 0),
//                10 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0),
//                11 => array(0, 0, 1, 0, 0, 0, 1, 1, 0, 0),
//                12 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                13 => array(1, 1, 0, 0, 0, 0, 0, 1, 1, 1),
//                14 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                15 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                16 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                17 => array(0, 1, 1, 0, 0, 0, 1, 1, 0, 0),
//                18 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            9 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 0, 0, 0, 0),
//                2 => array(0, 0, 1, 0, 0, 0, 1, 0, 0, 0),
//                3 => array(0, 1, 0, 0, 0, 0, 0, 1, 0, 0),
//                4 => array(1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                6 => array(1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                7 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                8 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                10 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                11 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                13 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                14 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                15 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                16 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                17 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
//                18 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0)
//            ),
//            10 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 0, 1, 0, 0, 0, 0, 1, 0, 0),
//                3 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                4 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                5 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                6 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                7 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                8 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                14 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                15 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 0),
//                16 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                17 => array(0, 0, 1, 1, 0, 0, 1, 1, 0, 0),
//                18 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
//            )
//            ,
//            11 => array(
//                1 => array(0, 0, 1, 1, 1, 0, 0),
//                2 => array(0, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 0, 0, 1, 1, 0, 0),
//                4 => array(0, 0, 0, 1, 1, 0, 0),
//                5 => array(0, 0, 0, 1, 1, 0, 0),
//                6 => array(0, 0, 0, 1, 1, 0, 0),
//                7 => array(0, 0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 0, 1, 1, 0, 0),
//                9 => array(0, 0, 0, 1, 1, 0, 0),
//                10 => array(0, 0, 0, 1, 1, 0, 0),
//                11 => array(0, 0, 0, 1, 1, 0, 0),
//                12 => array(0, 0, 0, 1, 1, 0, 0),
//                13 => array(0, 0, 0, 1, 1, 0, 0),
//                14 => array(0, 0, 0, 1, 1, 0, 0),
//                15 => array(0, 0, 0, 1, 1, 0, 0),
//                16 => array(0, 0, 1, 1, 1, 0, 0),
//                17 => array(0, 1, 1, 1, 1, 1, 0)
//            ),
//            12 => array(
//                1 => array(0, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 1, 1, 0, 0, 1, 1, 1, 0, 0),
//                3 => array(0, 1, 0, 0, 0, 0, 1, 1, 1, 0),
//                4 => array(1, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(1, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                6 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                7 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                8 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                9 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                10 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                11 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                12 => array(0, 0, 0, 0, 0, 1, 0, 0, 0, 0),
//                13 => array(0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
//                14 => array(0, 0, 0, 1, 0, 0, 0, 0, 0, 0),
//                15 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 1),
//                16 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 1),
//                17 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                18 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0)
//            ),
//            13 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 0, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 1, 0, 0, 0, 0, 1, 1, 0),
//                4 => array(0, 0, 0, 0, 0, 0, 0, 1, 0),
//                5 => array(0, 0, 0, 0, 0, 0, 0, 1, 0),
//                6 => array(0, 0, 0, 0, 0, 0, 0, 1, 0),
//                7 => array(0, 0, 0, 0, 0, 0, 1, 0, 0),
//                8 => array(0, 0, 0, 0, 0, 1, 1, 0, 0),
//                9 => array(0, 0, 0, 1, 1, 1, 1, 1, 0),
//                10 => array(0, 0, 0, 0, 0, 0, 1, 1, 1),
//                11 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
//                14 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
//                15 => array(0, 0, 0, 0, 0, 0, 0, 1, 0),
//                16 => array(0, 0, 0, 0, 0, 0, 0, 1, 0),
//                17 => array(1, 1, 1, 1, 1, 1, 1, 0, 0),
//                18 => array(0, 1, 1, 1, 1, 0, 0, 0, 0)
//            ),
//            14 => array(
//                1 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                2 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                3 => array(0, 0, 0, 0, 0, 1, 1, 1, 0, 0),
//                4 => array(0, 0, 0, 0, 1, 1, 1, 1, 0, 0),
//                5 => array(0, 0, 0, 0, 1, 0, 1, 1, 0, 0),
//                6 => array(0, 0, 0, 1, 0, 0, 1, 1, 0, 0),
//                7 => array(0, 0, 1, 1, 0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 1, 0, 0, 0, 1, 1, 0, 0),
//                9 => array(0, 1, 0, 0, 0, 0, 1, 1, 0, 0),
//                10 => array(1, 1, 0, 0, 0, 0, 1, 1, 0, 0),
//                11 => array(1, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                12 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                13 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                14 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                15 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                16 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0)
//            ),
//            15 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 1, 1, 0),
//                2 => array(0, 0, 0, 1, 1, 1, 1, 1, 1, 0),
//                3 => array(0, 0, 0, 1, 0, 0, 0, 0, 0, 0),
//                4 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
//                5 => array(0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
//                6 => array(0, 1, 1, 1, 1, 1, 0, 0, 0, 0),
//                7 => array(0, 1, 1, 1, 1, 1, 1, 0, 0, 0),
//                8 => array(0, 0, 0, 0, 0, 1, 1, 1, 0, 0),
//                9 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                10 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                11 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                13 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                14 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                15 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                16 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                17 => array(1, 1, 1, 1, 0, 1, 1, 0, 0, 0),
//                18 => array(0, 1, 1, 1, 1, 0, 0, 0, 0, 0)
//            ),
//            16 => array(
//                1 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                2 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                3 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
//                4 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
//                5 => array(0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
//                6 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
//                7 => array(0, 1, 0, 0, 1, 1, 0, 0, 0, 0),
//                8 => array(1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                11 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                14 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                15 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                16 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                17 => array(0, 0, 1, 1, 0, 0, 1, 1, 0, 0),
//                18 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            17 => array(
//                1 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                2 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                3 => array(1, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                4 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                6 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                7 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
//                9 => array(0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
//                10 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                11 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                12 => array(0, 0, 0, 0, 0, 1, 0, 0, 0, 0),
//                13 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                14 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                15 => array(0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
//                16 => array(0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
//                17 => array(0, 0, 0, 0, 1, 0, 0, 0, 0, 0)
//            ),
//            18 => array(
//                1 => array(0, 0, 1, 1, 1, 1, 1, 1, 0, 0),
//                2 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                3 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                4 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                5 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                6 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                7 => array(0, 1, 1, 1, 0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                9 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0),
//                10 => array(0, 0, 0, 1, 0, 1, 1, 1, 0, 0),
//                11 => array(0, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                12 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 1),
//                13 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                14 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                15 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                16 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                17 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 0),
//                18 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            19 => array(
//                1 => array(0, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 1, 1, 0, 0, 0, 0, 1, 0, 0),
//                3 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                4 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 0),
//                5 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                6 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                7 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                8 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                9 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 1),
//                11 => array(0, 0, 1, 1, 1, 1, 1, 0, 1, 1),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                13 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                14 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                15 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                16 => array(0, 0, 0, 0, 1, 1, 1, 0, 0, 0),
//                17 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
//                18 => array(0, 1, 1, 1, 0, 0, 0, 0, 0, 0)
//            )
//        );
//    }
//
//    public function getSArr() {
//        return array(
//            0 => array(
//                1 => array(2, 2, 2, 2, 1, 1),
//                2 => array(2, 2, 1, 1, 0, 0, 1, 1),
//                3 => array(2, 1, 1, 0, 0, 0, 0, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            1 => array(
//                1 => array(2, 2, 1, 1),
//                2 => array(1, 1, 1, 1),
//                3 => array(2, 2, 1, 1),
//                17 => array(2, 1, 1, 1),
//                18 => array(1, 1, 1, 1, 1, 1)
//            ),
//            2 => array(
//                3 => array(2, 1, 0, 0, 0, 0, 1, 1),
//                4 => array(1, 1, 0, 0, 0, 0, 1, 1, 1),
//                17 => array(2, 1, 1, 1, 1, 1, 1, 1, 1),
//                18 => array(2, 1, 1, 1, 1, 1, 1, 1)
//            ),
//            3 => array(
//                7 => array(2, 2, 0, 0, 0, 0, 1),
//                8 => array(2, 2, 0, 0, 1, 1, 1),
//                9 => array(2, 2, 0, 0, 1, 1, 1, 1),
//                10 => array(2, 2, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            4 => array(
//                4 => array(2, 2, 0, 0, 0, 1, 1, 1),
//                5 => array(2, 2, 0, 0, 1, 0, 1, 1),
//                11 => array(1, 1, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 0, 0, 0, 0, 1, 1),
//                13 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
//            ),
//            5 => array(
//                1 => array(2, 2, 0, 0, 0, 0, 0, 0, 1),
//                2 => array(2, 2, 0, 1, 1, 1, 1, 1, 1),
//                6 => array(2, 1, 1, 1, 1),
//                7 => array(2, 1, 1, 1, 1, 1, 1),
//                8 => array(2, 2, 0, 0, 1, 1, 1, 1),
//                17 => array(1, 1, 1, 1, 1, 1, 1),
//                18 => array(2, 1, 1, 1, 1)
//            ),
//            6 => array(
//                7 => array(2, 1, 1),
//                8 => array(1, 1, 0, 1, 1, 1, 1, 1),
//                9 => array(1, 1, 1, 1, 0, 0, 1, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            7 => array(
//                1 => array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                2 => array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                3 => array(1, 1, 0, 0, 0, 0, 0, 0, 1),
//                4 => array(1, 0, 0, 0, 0, 0, 0, 0, 1),
//                5 => array(2, 2, 0, 0, 0, 0, 0, 1, 1),
//                6 => array(2, 2, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            8 => array(
//                7 => array(2, 1, 1, 0, 0, 0, 1, 1),
//                8 => array(2, 2, 1, 1, 1, 1, 1),
//                9 => array(2, 2, 0, 1, 1, 1),
//                10 => array(2, 2, 0, 1, 1, 1, 1),
//                11 => array(2, 2, 1, 0, 0, 0, 1, 1),
//                12 => array(2, 1, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            9 => array(
//                8 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 1),
//                10 => array(2, 1, 1, 0, 0, 0, 0, 1, 1),
//                11 => array(2, 1, 1, 1, 1, 1, 1, 1, 1),
//                12 => array(2, 2, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            10 => array(
//                1 => array(2, 2, 0, 1, 1, 1, 1, 0),
//                2 => array(2, 2, 1, 0, 0, 0, 0, 1),
//                3 => array(2, 1, 1, 0, 0, 0, 0, 1, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            11 => array(
//                1 => array(2, 2, 1, 1, 1),
//                2 => array(2, 1, 1, 1, 1),
//                3 => array(2, 2, 0, 1, 1),
//                16 => array(2, 2, 1, 1, 1),
//                17 => array(2, 1, 1, 1, 1, 1)
//            ),
//            12 => array(
//                3 => array(2, 1, 0, 0, 0, 0, 1, 1, 1),
//                4 => array(1, 0, 0, 0, 0, 0, 0, 1, 1),
//                17 => array(2, 1, 1, 1, 1, 1, 1, 1, 1),
//                18 => array(2, 1, 1, 1, 1, 1, 1, 1, 1)
//            ),
//            13 => array(
//                7 => array(2, 2, 0, 0, 0, 0, 1),
//                8 => array(2, 2, 0, 0, 0, 1, 1),
//                9 => array(2, 2, 0, 1, 1, 1, 1, 1),
//                10 => array(2, 2, 0, 0, 0, 0, 1, 1, 1),
//                11 => array(2, 2, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            14 => array(
//                4 => array(2, 2, 0, 0, 1, 1, 1, 1),
//                5 => array(2, 2, 0, 0, 1, 0, 1, 1),
//                11 => array(1, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                13 => array(2, 2, 0, 0, 0, 0, 1, 1)
//            ),
//            15 => array(
//                1 => array(2, 2, 0, 1, 1, 1, 1, 1, 1),
//                2 => array(2, 2, 0, 1, 1, 1, 1, 1, 1),
//                6 => array(2, 1, 1, 1, 1, 1),
//                7 => array(2, 1, 1, 1, 1, 1, 1),
//                8 => array(2, 2, 0, 0, 0, 1, 1, 1),
//                17 => array(1, 1, 1, 1, 0, 1, 1),
//                18 => array(2, 1, 1, 1, 1)
//            ),
//            16 => array(
//                6 => array(2, 1, 1),
//                7 => array(2, 1, 0, 0, 1, 1),
//                8 => array(1, 1, 1, 1, 1, 1, 1, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            17 => array(
//                1 => array(2, 1, 1, 1, 1, 1, 1, 1, 1),
//                2 => array(2, 1, 0, 0, 0, 0, 0, 0, 1),
//                3 => array(1, 0, 0, 0, 0, 0, 0, 1, 1),
//                4 => array(2, 2, 0, 0, 0, 0, 0, 1, 1),
//                5 => array(2, 2, 0, 0, 0, 0, 0, 1),
//                6 => array(2, 2, 0, 0, 0, 0, 0, 1)
//            ),
//            18 => array(
//                7 => array(2, 1, 1, 1, 0, 0, 1, 1),
//                8 => array(2, 2, 1, 1, 1, 1, 1),
//                9 => array(2, 2, 0, 1, 1, 1, 1),
//                10 => array(2, 2, 0, 1, 0, 1, 1, 1),
//                11 => array(2, 1, 1, 0, 0, 0, 1, 1, 1),
//                12 => array(2, 1, 0, 0, 0, 0, 0, 1, 1, 1)
//            ),
//            19 => array(
//                9 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(2, 1, 1, 0, 0, 0, 0, 1, 1, 1),
//                11 => array(2, 2, 1, 1, 1, 1, 1, 0, 1, 1),
//                12 => array(2, 2, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(2, 2, 0, 0, 0, 0, 0, 1, 1)
//            )
//        );
//    }
//
//    public function mgArr($pec, $data, $limit) {
//        global $debug;
//
//        $mgarr = $this->getArr();
//        $mgsarr = $this->getSArr();
//
//        $temp = array();
//
//        foreach ($mgarr as $num => $arr) {
//            foreach ($arr as $key => $val) {
//                foreach ($val as $k => $v) {
//                    if ($k <= 2)
//                        continue;
//                    if ($k >= $limit)
//                        break;
//
//                    ++$temp[$num]['total'];
//                    if ($data[$key][$k] == $v) {
//                        ++$temp[$num]['num'];
//                        //echo $v != 0 ? $data[$key][$k].$v.'  ' : "<font style='color:#FFF;'>".$data[$key][$k].$v."</font>  ";
//                    } else {
//                        //echo "<font style='color:#FFF;'>".$data[$key][$k].$v."</font>  ";
//                    }
//                }
//                //echo '<br />';
//            }
//            //echo $temp[$num]['num']/$temp[$num]['total'];
//            //echo '<br />';
//        }
//
//        $return = $tempmax = $max = 0;
//        foreach ($temp as $tkey => $tval) {
//            $tempmax = floatval($tval['num'] / $tval['total']);
//            $return = $tempmax > $max ? $tkey : $return;
//            $max = $tempmax > $max ? $tempmax : $max;
//        }
//
//        $return = $max < $pec ? -1 : ($return > 9 ? $return - 10 : $return);
//        //echo $return >= 0 ?"<font style='color:#FFF;'>".$max."</font> " : '';
//        //echo '<br /><br />';
//        if ($debug == 1)
//            echo "<br/><br/>";
//        if ($debug == 1)
//            $this->drawWH($data);
//        //echo '<font style="color:red;">(';echo $return;echo ')</font>';
//
//        if ($return >= 0) {
//            foreach ($mgsarr as $nownum => $mgsarr_) {
//                //if($nownum != 1)
//                //{
//                //    continue;
//                //}
//                //echo '<font style="color:red;">[';echo $nownum;echo ']</font>';
//
//                $linenum = $linerightnum = 0;
//                foreach ($mgsarr_ as $mgskey => $mgsval) {
//                    if ($debug == 1)
//                        echo '<br />';
//                    ++$linenum;
//                    //echo "<br />[[$mgskey]]";
//                    $rownum = $rowrightnum = 0;
//                    foreach ($mgsval as $mgk => $mgv) {
//                        if ($debug == 1)
//                            echo '{' . $data[$mgskey][$mgk] . '-' . $mgv . '}';
//                        if ($mgv == 2) {
//                            continue;
//                        }
//
//                        ++$rownum;
//                        if ($data[$mgskey][$mgk] == $mgv) {
//                            ++$rowrightnum;
//                        }
//                    }
//                    $linerightnum = $rownum > 0 && $rownum == $rowrightnum ? $linerightnum + 1 : $linerightnum;
//                    //echo '<font style="color:green;">[';echo $totalnum.'-'.$rightnum;echo ']</font>';
//                }
//                if ($debug == 1) {
//                    echo '<br />(' . $nownum . ')<font style="color:green;">[';
//                    echo $linenum . '-' . $linerightnum;
//                    echo ']</font>';
//                }
//                if ($linenum > 0 && $linenum == $linerightnum) {
//                    return $nownum > 9 ? $nownum - 10 : $nownum;
//                }
//            }
//
//            $return = -1;
//        }
//
//        return $return;
//    }
//
//    public function getSize() {
//        return getimagesize($this->imgPath);
//    }
//
//    /**
//     * 颜色分离转换...
//     *
//     * @param unknown_type $path
//     * @return unknown
//     */
//    public function getHec() {
//        $size = $this->getSize();
//        $res = imagecreatefromgif($this->imgPath);
//        for ($i = 0; $i < $size[1]; ++$i) {
//            for ($j = 0; $j < $size[0]; ++$j) {
//                $rgb = imagecolorat($res, $j, $i);
//                $rgbarray = imagecolorsforindex($res, $rgb);
//                if ($rgbarray['red'] < 180 || $rgbarray['green'] < 180 || $rgbarray['blue'] < 180) {
//                    $data[$i][$j] = 1;
//                } else {
//                    $data[$i][$j] = 0;
//                }
//            }
//        }
//        $this->imgSize = $size;
//        $this->hecData = $data;
//    }
//
//    /**
//     * 颜色分离后的数据横向整理...
//     *
//     * @return unknown
//     */
//    public function magHorData($start, $limit, $passfirst = false) {
//
//        $data = $this->hecData;
//        $size = $this->imgSize;
//        $z = 0;
//
//        for ($i = 0; $i < $size[1]; ++$i) {
//            $iarr = array();
//            $ilength = 0;
//            foreach ($data[$i] as $key => $idata) {
//                if ($key >= $start) {
//                    if ($ilength < $limit) {
//                        $iarr[] = $idata;
//                        $ilength++;
//                    } else {
//                        break;
//                    }
//                }
//            }
//            if (in_array('1', $iarr)) {
//                $z++;
//                for ($j = 0; $j < $limit; ++$j) {
//                    if ($iarr[$j] == '1') {
//                        $newdata[$z][$j] = 1;
//                    } else {
//                        $newdata[$z][$j] = 0;
//                    }
//                }
//            }
//        }
//
//        if ($passfirst == true) {
//            unset($newdata[1]);
//            $temparr = array();
//            $temp = 1;
//            foreach ($newdata as $newval) {
//                $temparr[$temp] = $newval;
//                ++$temp;
//            }
//            $newdata = $temparr;
//        }
//
//        //print_r($newdata);exit;
//        return $this->horData = $newdata;
//    }
//
//    /**
//     * 整理纵向数据...
//     *
//     * @return unknown
//     */
//    public function magVerData($newdata) {
//        for ($i = 0; $i < 132;  ++$i) {
//            for ($j = 1; $j < 13;  ++$j) {
//                $ndata[$i][$j] = $newdata[$j][$i];
//            }
//        }
//
//
//        $sum = count($ndata);
//        $c = 0;
//        for ($a = 0; $a < $sum; $a++) {
//            $value = $ndata[$a];
//            if (in_array(1, $value)) {
//                $ndatas[$c] = $value;
//                $c++;
//            } elseif (is_array($ndatas)) {
//                $b = $c - 1;
//                if (in_array(1, $ndatas[$b])) {
//                    $ndatas[$c] = $value;
//                    $c++;
//                }
//            }
//        }
//
//        return $this->verData = $ndatas;
//    }
//
//    /**
//     * 显示电话号码...
//     *
//     * @return unknown
//     */
//    public function showPhone($ndatas) {
//        $phone = null;
//        $d = 0;
//        foreach ($ndatas as $key => $val) {
//            if (in_array(1, $val)) {
//                foreach ($val as $k => $v) {
//                    $ndArr[$d].=$v;
//                }
//            }
//            if (!in_array(1, $val)) {
//                $d++;
//            }
//        }
//        foreach ($ndArr as $key01 => $val01) {
//            $phone .= $this->initData($val01);
//        }
//        return $phone;
//    }
//
//    /**
//     * 分离显示...
//     *
//     * @param unknown_type $dataArr
//     */
//    function drawWH($dataArr) {
//        if (is_array($dataArr)) {
//            foreach ($dataArr as $key => $val) {
//                foreach ($val as $k => $v) {
//                    if ($v == 0) {
//                        $c .= "<font color='#FFFFFF'>" . $v . "</font>";
//                    } else {
//                        $c .= $v;
//                    }
//                }
//                $c .= "<br/>";
//            }
//        }
//        echo $c;
//    }
//
//}

//红色加粗短
//class Gjphone {
//
//    protected $imgPath; //图片路径
//    public $imgSize; //图片大小
//    protected $hecData; //分离后数组
//    protected $horData; //横向整理的数据
//    protected $verData; //纵向整理的数据
//
//    function __construct($path) {
//        $this->imgPath = implode('',$path);
//    }
//
//    public function getArr() {
//        return array(
//            0 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                4 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                6 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                7 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                8 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                13 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                14 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                15 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            1 => array(
//                1 => array(0, 0, 0, 1, 1),
//                2 => array(0, 0, 1, 1, 1),
//                3 => array(0, 1, 1, 1, 1),
//                4 => array(1, 1, 0, 1, 1),
//                5 => array(1, 1, 0, 1, 1),
//                6 => array(0, 0, 0, 1, 1),
//                7 => array(0, 0, 0, 1, 1),
//                8 => array(0, 0, 0, 1, 1),
//                9 => array(0, 0, 0, 1, 1),
//                10 => array(0, 0, 0, 1, 1),
//                11 => array(0, 0, 0, 1, 1),
//                12 => array(0, 0, 0, 1, 1),
//                13 => array(0, 0, 0, 1, 1),
//                14 => array(0, 0, 0, 1, 1),
//                15 => array(0, 0, 0, 1, 1)
//            )
//            ,
//            2 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0),
//                2 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0),
//                3 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1),
//                4 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1),
//                5 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                6 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                7 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                8 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                9 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                10 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                11 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
//                12 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
//                13 => array(0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
//                14 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                15 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1)
//            )
//            ,
//            3 => array(
//                1 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                2 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
//                4 => array(0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0),
//                5 => array(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
//                6 => array(0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0),
//                7 => array(0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0),
//                8 => array(0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0),
//                9 => array(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1),
//                14 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0),
//                15 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                16 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0)
//            ),
//            4 => array(
//                1 => array(0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0),
//                2 => array(0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0),
//                4 => array(0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0),
//                5 => array(0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0),
//                6 => array(0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0),
//                7 => array(0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0),
//                9 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0),
//                10 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                11 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                13 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                14 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                15 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0)
//            ),
//            5 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0),
//                2 => array(0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0),
//                3 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
//                4 => array(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0),
//                5 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
//                6 => array(0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0),
//                7 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                8 => array(0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                9 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1),
//                14 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0),
//                15 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                16 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            6 => array(
//                1 => array(0, 0, 0, 0, 0, 0, 1, 1, 1, 0),
//                2 => array(0, 0, 0, 1, 1, 1, 1, 1, 1, 0),
//                3 => array(0, 0, 1, 1, 1, 1, 0, 0, 0, 0),
//                4 => array(0, 1, 1, 1, 0, 0, 0, 0, 0, 0),
//                5 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
//                6 => array(1, 1, 0, 1, 1, 1, 1, 0, 0, 0),
//                7 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                8 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                14 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0),
//                15 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            7 => array(
//                1 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                2 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                3 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                4 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                6 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                7 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
//                9 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                10 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                11 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                12 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                13 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                14 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
//                15 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
//                16 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0)
//            ),
//            8 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                4 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                6 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                7 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                8 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                9 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                14 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                15 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            9 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                4 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                5 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                6 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                7 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                8 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 1),
//                9 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                10 => array(0, 0, 1, 1, 1, 1, 1, 0, 1, 0),
//                11 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                12 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                13 => array(0, 0, 0, 0, 1, 1, 1, 1, 0, 0),
//                14 => array(0, 1, 1, 1, 1, 1, 0, 0, 0, 0),
//                15 => array(0, 1, 1, 1, 0, 0, 0, 0, 0, 0)
//            ),
//            10 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                4 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                6 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                7 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                8 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1),
//                13 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                14 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                15 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                16 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            11 => array(
//                1 => array(0, 0, 0, 1, 1),
//                2 => array(0, 0, 1, 1, 1),
//                3 => array(0, 1, 1, 1, 1),
//                4 => array(1, 1, 0, 1, 1),
//                5 => array(1, 1, 0, 1, 1),
//                6 => array(0, 0, 0, 1, 1),
//                7 => array(0, 0, 0, 1, 1),
//                8 => array(0, 0, 0, 1, 1),
//                9 => array(0, 0, 0, 1, 1),
//                10 => array(0, 0, 0, 1, 1),
//                11 => array(0, 0, 0, 1, 1),
//                12 => array(0, 0, 0, 1, 1),
//                13 => array(0, 0, 0, 1, 1),
//                14 => array(0, 0, 0, 1, 1),
//                15 => array(0, 0, 0, 1, 1),
//                16 => array(0, 0, 0, 1, 1)
//            ),
//            12 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0),
//                2 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0),
//                3 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1),
//                4 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1),
//                5 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                6 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                7 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                8 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                9 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                10 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
//                11 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
//                12 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
//                13 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
//                14 => array(0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
//                15 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                16 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1)
//            ),
//            13 => array(
//                1 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                2 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
//                4 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
//                5 => array(0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0),
//                6 => array(0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0),
//                7 => array(0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0),
//                8 => array(0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1),
//                9 => array(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1),
//                13 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0),
//                14 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                15 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            14 => array(
//                1 => array(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0),
//                2 => array(0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0),
//                4 => array(0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0),
//                5 => array(0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0),
//                6 => array(0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0),
//                7 => array(0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0),
//                9 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                10 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                11 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                13 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                14 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                15 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                16 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0)
//            ),
//            15 => array(
//                1 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0),
//                2 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0),
//                3 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
//                4 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
//                5 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
//                6 => array(0, 1, 1, 0, 1, 1, 1, 0, 0, 0),
//                7 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                8 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                9 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                10 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(0, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                14 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                15 => array(0, 0, 1, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            16 => array(
//                1 => array(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0),
//                2 => array(0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0),
//                3 => array(0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0),
//                4 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
//                5 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0),
//                6 => array(0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                7 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                8 => array(1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                9 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1),
//                10 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                11 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1),
//                14 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                15 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                16 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            17 => array(
//                1 => array(1, 1, 1, 1, 1, 1, 1, 1, 1),
//                2 => array(1, 1, 1, 1, 1, 1, 1, 1, 1),
//                3 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
//                4 => array(0, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(0, 0, 0, 0, 0, 0, 1, 1, 0),
//                6 => array(0, 0, 0, 0, 0, 1, 1, 0, 0),
//                7 => array(0, 0, 0, 0, 0, 1, 1, 0, 0),
//                8 => array(0, 0, 0, 0, 1, 1, 0, 0, 0),
//                9 => array(0, 0, 0, 0, 1, 1, 0, 0, 0),
//                10 => array(0, 0, 0, 1, 1, 0, 0, 0, 0),
//                11 => array(0, 0, 0, 1, 1, 0, 0, 0, 0),
//                12 => array(0, 0, 0, 1, 1, 0, 0, 0, 0),
//                13 => array(0, 0, 1, 1, 0, 0, 0, 0, 0),
//                14 => array(0, 0, 1, 1, 0, 0, 0, 0, 0),
//                15 => array(0, 0, 1, 1, 0, 0, 0, 0, 0)
//            ),
//            18 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                4 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                5 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
//                6 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                7 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                8 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                9 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                10 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1),
//                11 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                12 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                13 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                14 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0),
//                15 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0),
//                16 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0)
//            ),
//            19 => array(
//                1 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0),
//                2 => array(0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
//                3 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
//                4 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                5 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                6 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                7 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
//                8 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 1),
//                9 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                10 => array(0, 0, 1, 1, 1, 1, 1, 0, 1, 1),
//                11 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
//                12 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
//                13 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
//                14 => array(0, 0, 0, 0, 1, 1, 1, 1, 0, 0),
//                15 => array(0, 1, 1, 1, 1, 1, 0, 0, 0, 0),
//                16 => array(0, 1, 1, 1, 0, 0, 0, 0, 0, 0)
//            )
//        );
//    }
//
//    public function getSArr() {
//        return array(
//            0 => array(
//                1 => array(2, 2, 2, 1, 1, 1, 1, 1),
//                2 => array(2, 2, 1, 1, 1, 1, 1, 1, 1),
//                3 => array(2, 1, 1, 1, 0, 0, 0, 1, 1, 1),
//                7 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                8 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            1 => array(
//                1 => array(2, 2, 2, 1, 1),
//                2 => array(2, 2, 1, 1, 1),
//                3 => array(2, 1, 1, 1, 1),
//                14 => array(2, 2, 2, 1, 1),
//                15 => array(2, 2, 2, 1, 1),
//            ),
//            2 => array(
//                14 => array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                15 => array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1)
//            ),
//            3 => array(
//                7 => array(2, 2, 2, 1, 1, 1, 1, 1, 1, 1),
//                8 => array(2, 2, 2, 1, 1, 0, 0, 0, 1, 1),
//                9 => array(2, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            4 => array(
//                10 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                11 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
//            ),
//            5 => array(
//                1 => array(2, 2, 2, 1, 1, 1, 1, 1, 1, 1),
//                2 => array(2, 2, 2, 1, 1, 1, 1, 1, 1, 1),
//                7 => array(2, 2, 1, 1, 1, 1, 1, 1, 1, 1),
//                8 => array(2, 1, 1, 1, 0, 0, 0, 0, 1, 1),
//                9 => array(2, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            6 => array(
//                6 => array(1, 1, 0, 1, 1, 1, 1),
//                7 => array(1, 1, 1, 1, 1, 1, 1, 1, 1),
//                8 => array(1, 1, 1, 0, 0, 0, 0, 1, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            7 => array(
//                1 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                2 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
//            ),
//            8 => array(
//                5 => array(2, 1, 1, 1, 0, 0, 0, 1, 1, 1),
//                6 => array(2, 2, 1, 1, 1, 1, 1, 1, 1),
//                7 => array(2, 2, 1, 1, 1, 1, 1, 1, 1),
//                8 => array(2, 1, 1, 1, 0, 0, 0, 1, 1, 1)
//            ),
//            9 => array(
//                8 => array(2, 1, 1, 0, 0, 0, 0, 1, 1, 1),
//                9 => array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                10 => array(2, 2, 1, 1, 1, 1, 1, 0, 1),
//                11 => array(2, 2, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            10 => array(
//                1 => array(2, 2, 2, 1, 1, 1, 1, 1),
//                2 => array(2, 2, 1, 1, 1, 1, 1, 1, 1),
//                3 => array(2, 1, 1, 1, 0, 0, 0, 1, 1, 1),
//                8 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
//                9 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            11 => array(
//                1 => array(2, 2, 2, 1, 1),
//                2 => array(2, 2, 1, 1, 1),
//                3 => array(2, 1, 1, 1, 1),
//                15 => array(2, 2, 2, 1, 1),
//                16 => array(2, 2, 2, 1, 1),
//            ),
//            12 => array(
//                15 => array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                16 => array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1)
//            ),
//            13 => array(
//                7 => array(2, 2, 2, 2, 1, 1, 1, 1, 1, 1),
//                8 => array(2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1),
//                9 => array(2, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            14 => array(
//                10 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                11 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
//            ),
//            15 => array(
//                1 => array(2, 2, 1, 1, 1, 1, 1, 1, 1),
//                2 => array(2, 2, 1, 1, 1, 1, 1, 1, 1),
//                7 => array(2, 1, 1, 1, 1, 1, 1, 1, 1),
//                8 => array(2, 1, 1, 0, 0, 0, 0, 1, 1),
//                9 => array(2, 2, 2, 0, 0, 0, 0, 0, 1, 1)
//            ),
//            16 => array(
//                6 => array(2, 1, 0, 1, 1, 1, 1, 1),
//                7 => array(1, 1, 1, 1, 1, 1, 1, 1, 1),
//                8 => array(1, 1, 1, 1, 0, 0, 0, 1, 1, 1),
//                9 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1)
//            ),
//            17 => array(
//                1 => array(1, 1, 1, 1, 1, 1, 1, 1, 1),
//                2 => array(1, 1, 1, 1, 1, 1, 1, 1, 1)
//            ),
//            18 => array(
//                6 => array(2, 1, 1, 1, 0, 0, 0, 1, 1, 1),
//                7 => array(2, 2, 1, 1, 1, 1, 1, 1, 1),
//                8 => array(2, 2, 1, 1, 1, 1, 1, 1, 1),
//                9 => array(2, 1, 1, 1, 0, 0, 0, 1, 1, 1),
//            ),
//            19 => array(
//                8 => array(2, 1, 1, 0, 0, 0, 0, 1, 1, 1),
//                9 => array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1),
//                10 => array(2, 2, 1, 1, 1, 1, 1, 0, 1, 1),
//                11 => array(2, 2, 0, 0, 0, 0, 0, 0, 1)
//            )
//        );
//    }
//
//    public function mgArr($pec, $data, $limit) {
//        global $debug;
//
//        $mgarr = $this->getArr();
//        $mgsarr = $this->getSArr();
//
//        $temp = array();
//
//        foreach ($mgarr as $num => $arr) {
//            foreach ($arr as $key => $val) {
//                foreach ($val as $k => $v) {
//                    if ($k <= 2)
//                        continue;
//                    if ($k >= $limit)
//                        break;
//
//                    ++$temp[$num]['total'];
//                    if ($data[$key][$k] == $v) {
//                        ++$temp[$num]['num'];
//                        //echo $v != 0 ? $data[$key][$k].$v.'  ' : "<font style='color:#FFF;'>".$data[$key][$k].$v."</font>  ";
//                    } else {
//                        //echo "<font style='color:#FFF;'>".$data[$key][$k].$v."</font>  ";
//                    }
//                }
//                //echo '<br />';
//            }
//            //echo $temp[$num]['num']/$temp[$num]['total'];
//            //echo '<br />';
//        }
//
//        $return = $tempmax = $max = 0;
//        foreach ($temp as $tkey => $tval) {
//            $tempmax = floatval($tval['num'] / $tval['total']);
//            $return = $tempmax > $max ? $tkey : $return;
//            $max = $tempmax > $max ? $tempmax : $max;
//        }
//
//        $return = $max < $pec ? -1 : ($return > 9 ? $return - 10 : $return);
//        //echo $return >= 0 ?"<font style='color:#FFF;'>".$max."</font> " : '';
//        //echo '<br /><br />';
//        if ($debug == 1)
//            echo "<br/><br/>";
//        if ($debug == 1)
//            $this->drawWH($data);
//        //echo '<font style="color:red;">(';echo $return;echo ')</font>';
//
//        if ($return >= 0) {
//            foreach ($mgsarr as $nownum => $mgsarr_) {
//                //if($nownum != 1)
//                //{
//                //    continue;
//                //}
//                //echo '<font style="color:red;">[';echo $nownum;echo ']</font>';
//
//                $linenum = $linerightnum = 0;
//                foreach ($mgsarr_ as $mgskey => $mgsval) {
//                    if ($debug == 1)
//                        echo '<br />';
//                    ++$linenum;
//                    //echo "<br />[[$mgskey]]";
//                    $rownum = $rowrightnum = 0;
//                    foreach ($mgsval as $mgk => $mgv) {
//                        if ($debug == 1)
//                            echo '{' . $data[$mgskey][$mgk] . '-' . $mgv . '}';
//                        if ($mgv == 2) {
//                            continue;
//                        }
//
//                        ++$rownum;
//                        if ($data[$mgskey][$mgk] == $mgv) {
//                            ++$rowrightnum;
//                        }
//                    }
//                    $linerightnum = $rownum > 0 && $rownum == $rowrightnum ? $linerightnum + 1 : $linerightnum;
//                    //echo '<font style="color:green;">[';echo $totalnum.'-'.$rightnum;echo ']</font>';
//                }
//                if ($debug == 1) {
//                    echo '<br />(' . $nownum . ')<font style="color:green;">[';
//                    echo $linenum . '-' . $linerightnum;
//                    echo ']</font>';
//                }
//                if ($linenum > 0 && $linenum == $linerightnum) {
//                    return $nownum > 9 ? $nownum - 10 : $nownum;
//                }
//            }
//
//            $return = -1;
//        }
//
//        return $return;
//    }
//
//    public function getSize() {
//        return getimagesize($this->imgPath);
//    }
//
//    /**
//     * 颜色分离转换...
//     *
//     * @param unknown_type $path
//     * @return unknown
//     */
//    public function getHec() {
//        $size = $this->getSize();
//        $res = imagecreatefromgif($this->imgPath);
//        for ($i = 0; $i < $size[1]; ++$i) {
//            for ($j = 0; $j < $size[0]; ++$j) {
//                $rgb = imagecolorat($res, $j, $i);
//                $rgbarray = imagecolorsforindex($res, $rgb);
//                if ($rgbarray['red'] < 125 || $rgbarray['green'] < 125 || $rgbarray['blue'] < 125) {
//                    $data[$i][$j] = 1;
//                } else {
//                    $data[$i][$j] = 0;
//                }
//            }
//        }
//        $this->imgSize = $size;
//        $this->hecData = $data;
//    }
//
//    /**
//     * 颜色分离后的数据横向整理...
//     *
//     * @return unknown
//     */
//    public function magHorData($start, $limit, $passfirst = false) {
//
//        $data = $this->hecData;
//        $size = $this->imgSize;
//        $z = 0;
//
//        for ($i = 0; $i < $size[1]; ++$i) {
//            $iarr = array();
//            $ilength = 0;
//            foreach ($data[$i] as $key => $idata) {
//                if ($key >= $start) {
//                    if ($ilength < $limit) {
//                        $iarr[] = $idata;
//                        $ilength++;
//                    } else {
//                        break;
//                    }
//                }
//            }
//            if (in_array('1', $iarr)) {
//                $z++;
//                for ($j = 0; $j < $limit; ++$j) {
//                    if ($iarr[$j] == '1') {
//                        $newdata[$z][$j] = 1;
//                    } else {
//                        $newdata[$z][$j] = 0;
//                    }
//                }
//            }
//        }
//
//        if ($passfirst == true) {
//            unset($newdata[1]);
//            $temparr = array();
//            $temp = 1;
//            foreach ($newdata as $newval) {
//                $temparr[$temp] = $newval;
//                ++$temp;
//            }
//            $newdata = $temparr;
//        }
//
//        //print_r($newdata);exit;
//        return $this->horData = $newdata;
//    }
//
//    /**
//     * 整理纵向数据...
//     *
//     * @return unknown
//     */
//    public function magVerData($newdata) {
//        for ($i = 0; $i < 132;  ++$i) {
//            for ($j = 1; $j < 13;  ++$j) {
//                $ndata[$i][$j] = $newdata[$j][$i];
//            }
//        }
//
//
//        $sum = count($ndata);
//        $c = 0;
//        for ($a = 0; $a < $sum; $a++) {
//            $value = $ndata[$a];
//            if (in_array(1, $value)) {
//                $ndatas[$c] = $value;
//                $c++;
//            } elseif (is_array($ndatas)) {
//                $b = $c - 1;
//                if (in_array(1, $ndatas[$b])) {
//                    $ndatas[$c] = $value;
//                    $c++;
//                }
//            }
//        }
//
//        return $this->verData = $ndatas;
//    }
//
//    /**
//     * 显示电话号码...
//     *
//     * @return unknown
//     */
//    public function showPhone($ndatas) {
//        $phone = null;
//        $d = 0;
//        foreach ($ndatas as $key => $val) {
//            if (in_array(1, $val)) {
//                foreach ($val as $k => $v) {
//                    $ndArr[$d].=$v;
//                }
//            }
//            if (!in_array(1, $val)) {
//                $d++;
//            }
//        }
//        foreach ($ndArr as $key01 => $val01) {
//            $phone .= $this->initData($val01);
//        }
//        return $phone;
//    }
//
//    /**
//     * 分离显示...
//     *
//     * @param unknown_type $dataArr
//     */
//    function drawWH($dataArr) {
//        if (is_array($dataArr)) {
//            foreach ($dataArr as $key => $val) {
//                foreach ($val as $k => $v) {
//                    if ($v == 0) {
//                        $c .= "<font color='#FFFFFF'>" . $v . "</font>";
//                    } else {
//                        $c .= $v;
//                    }
//                }
//                $c .= "<br/>";
//            }
//        }
//        echo $c;
//    }
//
//}

//2015.7.15
//红色正体
class Gjphone
{

  protected $imgPath; //图片路径
  public $imgSize; //图片大小
  protected $hecData; //分离后数组
  protected $horData; //横向整理的数据
  protected $verData; //纵向整理的数据

  function __construct($path)
  {
    $this->imgPath = implode('', $path);
  }

  public function getArr()
  {
    return array(
      0 => array(
        1 => array(0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0),
        2 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
        3 => array(0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0),
        4 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        5 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        6 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        7 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        8 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        9 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        10 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        11 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        12 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        13 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        14 => array(0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0),
        15 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
        16 => array(0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0)
      ),
      1 => array(
        1 => array(0, 0, 1, 1, 0),
        2 => array(0, 1, 1, 1, 0),
        3 => array(1, 1, 1, 1, 0),
        4 => array(0, 0, 1, 1, 0),
        5 => array(0, 0, 1, 1, 0),
        6 => array(0, 0, 1, 1, 0),
        7 => array(0, 0, 1, 1, 0),
        8 => array(0, 0, 1, 1, 0),
        9 => array(0, 0, 1, 1, 0),
        10 => array(0, 0, 1, 1, 0),
        11 => array(0, 0, 1, 1, 0),
        12 => array(0, 0, 1, 1, 0),
        13 => array(0, 0, 1, 1, 0),
        14 => array(0, 0, 1, 1, 0),
        15 => array(0, 0, 1, 1, 0),
        16 => array(0, 0, 1, 1, 0)
      ),
      2 => array(
        1 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0),
        2 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0),
        3 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 1),
        4 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        5 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        6 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        7 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        8 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
        9 => array(0, 0, 0, 0, 1, 1, 1, 0, 0, 0),
        10 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
        11 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
        12 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
        13 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0),
        14 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0),
        15 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        16 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
      )
    ,
      3 => array(
        1 => array(0, 1, 1, 1, 1, 1, 1, 0, 0, 0),
        2 => array(0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
        3 => array(0, 0, 0, 0, 0, 0, 1, 1, 1, 0),
        4 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        5 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        6 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        7 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
        8 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0),
        9 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0),
        10 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        11 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        12 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        13 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        14 => array(1, 0, 0, 0, 0, 0, 0, 1, 1, 1),
        15 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 0),
        16 => array(0, 1, 1, 1, 1, 1, 1, 0, 0, 0)
      ),
      4 => array(
        1 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
        2 => array(0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0),
        3 => array(0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0),
        4 => array(0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0),
        5 => array(0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0),
        6 => array(0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0),
        7 => array(0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0),
        8 => array(0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0),
        9 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0),
        10 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
        11 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        12 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        13 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
        14 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
        15 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
        16 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0)
      ),
      5 => array(
        1 => array(1, 1, 1, 1, 1, 1, 1, 1, 0),
        2 => array(1, 1, 1, 1, 1, 1, 1, 1, 0),
        3 => array(1, 1, 0, 0, 0, 0, 0, 0, 0),
        4 => array(1, 1, 0, 0, 0, 0, 0, 0, 0),
        5 => array(1, 1, 0, 0, 0, 0, 0, 0, 0),
        6 => array(1, 1, 0, 0, 0, 0, 0, 0, 0),
        7 => array(1, 1, 1, 1, 1, 1, 0, 0, 0),
        8 => array(1, 1, 1, 1, 1, 1, 1, 0, 0),
        9 => array(0, 0, 0, 0, 0, 1, 1, 1, 0),
        10 => array(0, 0, 0, 0, 0, 0, 1, 1, 1),
        11 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
        12 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
        13 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
        14 => array(1, 0, 0, 0, 0, 1, 1, 1, 0),
        15 => array(1, 1, 1, 1, 1, 1, 1, 0, 0),
        16 => array(0, 1, 1, 1, 1, 1, 0, 0, 0)
      ),
      6 => array(
        1 => array(0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0),
        2 => array(0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0),
        3 => array(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0),
        4 => array(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0),
        5 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0),
        6 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        7 => array(1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0),
        8 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0),
        9 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
        10 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        11 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        12 => array(0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        13 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
        14 => array(0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
        15 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0),
        16 => array(0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
      ),
      7 => array(
        1 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        2 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        3 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
        4 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
        5 => array(0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
        6 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
        7 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
        8 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
        9 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
        10 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
        11 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
        12 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
        13 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
        14 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
        15 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
        16 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0)
      ),
      8 => array(
        1 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0),
        2 => array(0, 0, 1, 1, 1, 1, 1, 1, 0, 0),
        3 => array(0, 1, 1, 1, 0, 0, 1, 1, 1, 0),
        4 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
        5 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0),
        6 => array(0, 1, 1, 1, 0, 0, 1, 1, 1, 0),
        7 => array(0, 0, 1, 1, 0, 0, 1, 1, 0, 0),
        8 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0),
        9 => array(0, 0, 1, 1, 1, 1, 1, 1, 0, 0),
        10 => array(0, 1, 1, 1, 0, 0, 1, 1, 1, 0),
        11 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 1),
        12 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
        13 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
        14 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 1),
        15 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 0),
        16 => array(0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
      ),
      9 => array(
        1 => array(0, 0, 0, 1, 1, 1, 0, 0, 0, 0),
        2 => array(0, 1, 1, 1, 1, 1, 1, 1, 0, 0),
        3 => array(0, 1, 1, 0, 0, 0, 1, 1, 1, 0),
        4 => array(1, 1, 0, 0, 0, 0, 0, 1, 1, 0),
        5 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 0),
        6 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
        7 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
        8 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 1),
        9 => array(0, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        10 => array(0, 0, 1, 1, 1, 1, 0, 0, 1, 1),
        11 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        12 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        13 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        14 => array(0, 0, 0, 0, 0, 1, 1, 1, 0, 0),
        15 => array(0, 1, 1, 1, 1, 1, 1, 0, 0, 0),
        16 => array(0, 1, 1, 1, 1, 1, 0, 0, 0, 0)
      ),
      10 => array(
        1 => array(0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0),
        2 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
        3 => array(0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0),
        4 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        5 => array(1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1),
        6 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        7 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        8 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        9 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        10 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1),
        11 => array(1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1),
        12 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0),
        13 => array(0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0),
        14 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0),
        15 => array(0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0)
      ),
      11 => array(
        1 => array(0, 0, 1, 1, 0),
        2 => array(0, 1, 1, 1, 0),
        3 => array(1, 1, 1, 1, 0),
        4 => array(0, 0, 1, 1, 0),
        5 => array(0, 0, 1, 1, 0),
        6 => array(0, 0, 1, 1, 0),
        7 => array(0, 0, 1, 1, 0),
        8 => array(0, 0, 1, 1, 0),
        9 => array(0, 0, 1, 1, 0),
        10 => array(0, 0, 1, 1, 0),
        11 => array(0, 0, 1, 1, 0),
        12 => array(0, 0, 1, 1, 0),
        13 => array(0, 0, 1, 1, 0),
        14 => array(0, 0, 1, 1, 0),
        15 => array(0, 0, 1, 1, 0)
      ),
      12 => array(
        1 => array(0, 0, 0, 1, 1, 1, 1, 0, 0),
        2 => array(0, 1, 1, 1, 1, 1, 1, 1, 0),
        3 => array(1, 1, 0, 0, 0, 0, 1, 1, 1),
        4 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
        5 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
        6 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
        7 => array(0, 0, 0, 0, 0, 0, 1, 1, 0),
        8 => array(0, 0, 0, 0, 0, 1, 1, 0, 0),
        9 => array(0, 0, 0, 1, 1, 0, 0, 0, 0),
        10 => array(0, 0, 1, 1, 0, 0, 0, 0, 0),
        11 => array(0, 1, 1, 0, 0, 0, 0, 0, 0),
        12 => array(0, 1, 0, 0, 0, 0, 0, 0, 0),
        13 => array(1, 1, 0, 0, 0, 0, 0, 0, 0),
        14 => array(1, 1, 1, 1, 1, 1, 1, 1, 1),
        15 => array(1, 1, 1, 1, 1, 1, 1, 1, 1)
      ),
      13 => array(
        1 => array(0, 1, 1, 1, 1, 1, 0, 0, 0),
        2 => array(0, 1, 1, 1, 1, 1, 1, 0, 0),
        3 => array(0, 0, 0, 0, 0, 1, 1, 1, 0),
        4 => array(0, 0, 0, 0, 0, 0, 1, 1, 0),
        5 => array(0, 0, 0, 0, 0, 0, 1, 1, 0),
        6 => array(0, 0, 0, 0, 0, 1, 1, 1, 0),
        7 => array(0, 0, 0, 1, 1, 1, 1, 0, 0),
        8 => array(0, 0, 0, 1, 1, 1, 1, 0, 0),
        9 => array(0, 0, 0, 0, 0, 0, 1, 1, 0),
        10 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
        11 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
        12 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
        13 => array(1, 0, 0, 0, 0, 0, 1, 1, 1),
        14 => array(1, 1, 1, 1, 1, 1, 1, 1, 0),
        15 => array(0, 1, 1, 1, 1, 1, 0, 0, 0)
      ),
      14 => array(
        1 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
        2 => array(0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0),
        3 => array(0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0),
        4 => array(0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0),
        5 => array(0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0),
        6 => array(0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0),
        7 => array(0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0),
        8 => array(0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0),
        9 => array(0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0),
        10 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        11 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        12 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
        13 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
        14 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
        15 => array(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0)
      ),
      15 => array(
        1 => array(1, 1, 1, 1, 1, 1, 1, 0),
        2 => array(1, 1, 1, 1, 1, 1, 1, 0),
        3 => array(1, 1, 0, 0, 0, 0, 0, 0),
        4 => array(1, 1, 0, 0, 0, 0, 0, 0),
        5 => array(1, 1, 0, 0, 0, 0, 0, 0),
        6 => array(1, 1, 0, 0, 0, 0, 0, 0),
        7 => array(1, 1, 1, 1, 1, 0, 0, 0),
        8 => array(1, 1, 1, 1, 1, 1, 1, 0),
        9 => array(0, 0, 0, 0, 0, 1, 1, 1),
        10 => array(0, 0, 0, 0, 0, 0, 1, 1),
        11 => array(0, 0, 0, 0, 0, 0, 1, 1),
        12 => array(0, 0, 0, 0, 0, 0, 1, 1),
        13 => array(0, 0, 0, 0, 0, 1, 1, 0),
        14 => array(1, 1, 1, 1, 1, 1, 1, 0),
        15 => array(0, 1, 1, 1, 1, 0, 0, 0)
      ),
      16 => array(
        1 => array(0, 0, 0, 0, 1, 1, 1, 1, 1, 0),
        2 => array(0, 0, 0, 1, 1, 1, 1, 1, 1, 0),
        3 => array(0, 0, 1, 1, 1, 0, 0, 0, 0, 0),
        4 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
        5 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
        6 => array(1, 1, 0, 0, 0, 0, 0, 0, 0, 0),
        7 => array(1, 1, 0, 1, 1, 1, 1, 1, 0, 0),
        8 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 0),
        9 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 1),
        10 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
        11 => array(1, 1, 0, 0, 0, 0, 0, 0, 1, 1),
        12 => array(0, 1, 1, 0, 0, 0, 0, 0, 1, 1),
        13 => array(0, 1, 1, 1, 0, 0, 0, 1, 1, 1),
        14 => array(0, 0, 1, 1, 1, 1, 1, 1, 1, 0),
        15 => array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0)
      ),
      17 => array(
        1 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        2 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        3 => array(0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
        4 => array(0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
        5 => array(0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
        6 => array(0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
        7 => array(0, 0, 0, 0, 1, 1, 0, 0, 0, 0),
        8 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
        9 => array(0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
        10 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
        11 => array(0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
        12 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
        13 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
        14 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
        15 => array(0, 1, 1, 0, 0, 0, 0, 0, 0, 0)
      ),
      18 => array(
        1 => array(0, 0, 0, 1, 1, 1, 0, 0, 0),
        2 => array(0, 0, 1, 1, 1, 1, 1, 0, 0),
        3 => array(0, 1, 1, 1, 0, 0, 1, 1, 0),
        4 => array(0, 1, 1, 0, 0, 0, 1, 1, 0),
        5 => array(0, 1, 1, 0, 0, 0, 1, 1, 0),
        6 => array(0, 0, 1, 1, 0, 1, 1, 0, 0),
        7 => array(0, 0, 1, 1, 1, 1, 1, 0, 0),
        8 => array(0, 0, 1, 1, 1, 1, 1, 0, 0),
        9 => array(0, 1, 1, 1, 0, 1, 1, 1, 0),
        10 => array(1, 1, 1, 0, 0, 0, 1, 1, 1),
        11 => array(1, 1, 0, 0, 0, 0, 0, 1, 1),
        12 => array(1, 1, 0, 0, 0, 0, 0, 1, 1),
        13 => array(1, 1, 1, 0, 0, 0, 1, 1, 1),
        14 => array(0, 1, 1, 1, 1, 1, 1, 1, 0),
        15 => array(0, 0, 1, 1, 1, 1, 1, 0, 0)
      ),
      19 => array(
        1 => array(0, 0, 1, 1, 1, 1, 0, 0, 0),
        2 => array(0, 1, 1, 1, 1, 1, 1, 0, 0),
        3 => array(1, 1, 1, 0, 0, 0, 1, 1, 0),
        4 => array(1, 1, 0, 0, 0, 0, 0, 1, 0),
        5 => array(1, 1, 0, 0, 0, 0, 0, 1, 1),
        6 => array(1, 1, 0, 0, 0, 0, 0, 1, 1),
        7 => array(1, 1, 1, 0, 0, 0, 1, 1, 1),
        8 => array(0, 1, 1, 1, 1, 1, 1, 1, 1),
        9 => array(0, 0, 1, 1, 1, 1, 0, 1, 1),
        10 => array(0, 0, 0, 0, 0, 0, 0, 1, 1),
        11 => array(0, 0, 0, 0, 0, 0, 1, 1, 1),
        12 => array(0, 0, 0, 0, 0, 0, 1, 1, 0),
        13 => array(0, 0, 0, 0, 0, 1, 1, 1, 0),
        14 => array(0, 1, 1, 1, 1, 1, 1, 0, 0),
        15 => array(0, 1, 1, 1, 1, 0, 0, 0, 0)
      )
    );
  }

  public function getSArr()
  {
    return array(
      0 => array(
        1 => array(2, 2, 2, 0, 1, 1, 1, 1),
        2 => array(2, 2, 1, 1, 1, 1, 1, 1, 1, 1),
        3 => array(2, 2, 1, 1, 0, 0, 0, 0, 1, 1),
        15 => array(2, 2, 1, 1, 1, 1, 1, 1, 1, 1),
        16 => array(2, 2, 0, 0, 1, 1, 1, 1)
      ),
      1 => array(
        1 => array(2, 2, 1, 1, 0),
        2 => array(2, 1, 1, 1, 0),
        3 => array(1, 1, 1, 1, 0),
        4 => array(2, 2, 1, 1, 0),
        10 => array(2, 2, 1, 1, 0),
        11 => array(2, 2, 1, 1, 0),
        12 => array(2, 2, 1, 1, 0)
      ),
      2 => array(
        1 => array(2, 2, 2, 1, 1, 1, 1),
        2 => array(2, 1, 1, 1, 1, 1, 1, 1, 1),
        3 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 1),
        15 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        16 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
      ),
      3 => array(
        7 => array(2, 2, 2, 0, 0, 0, 1, 1),
        8 => array(2, 2, 2, 1, 1, 1, 1, 1),
        9 => array(2, 2, 2, 1, 1, 1, 1, 1),
        10 => array(2, 2, 2, 0, 0, 0, 0, 1, 1)
      ),
      4 => array(
        3 => array(2, 2, 2, 2, 0, 1, 1, 1, 1),
        4 => array(2, 2, 2, 2, 0, 1, 0, 1, 1),
        5 => array(2, 2, 2, 2, 1, 0, 0, 1, 1)
      ),
      5 => array(
        1 => array(1, 1, 1, 1, 1, 1, 1, 1),
        2 => array(1, 1, 1, 1, 1, 1, 1, 1),
        7 => array(1, 1, 1, 1, 1, 1),
        8 => array(1, 1, 1, 1, 1, 1, 1),
        9 => array(2, 2, 2, 0, 0, 1, 1, 1)
      ),
      6 => array(
        6 => array(1, 1),
        7 => array(1, 1, 0, 0, 1, 1, 1, 1),
        8 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        9 => array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1)
      ),
      7 => array(
        1 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        2 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        15 => array(2, 1, 1),
        16 => array(2, 1, 1)
      ),
      8 => array(
        7 => array(2, 2, 1, 1, 0, 0, 1, 1),
        8 => array(2, 2, 2, 1, 1, 1, 1),
        9 => array(2, 2, 1, 1, 1, 1, 1, 1),
        10 => array(2, 1, 1, 1, 0, 0, 1, 1, 1)
      ),
      9 => array(
        8 => array(2, 1, 1, 0, 0, 0, 0, 1, 1, 1),
        9 => array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        10 => array(2, 2, 1, 1, 1, 1, 0, 0, 1, 1),
        11 => array(2, 2, 2, 0, 0, 0, 0, 0, 1, 1)
      ),
      10 => array(
        1 => array(2, 2, 2, 0, 1, 1, 1, 1),
        2 => array(2, 2, 1, 1, 1, 1, 1, 1, 1, 1),
        3 => array(2, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1),
        14 => array(2, 2, 1, 1, 1, 1, 1, 1, 1, 1),
        15 => array(2, 2, 0, 0, 1, 1, 1, 1)
      ),
      11 => array(
        1 => array(2, 2, 1, 1, 0),
        2 => array(2, 1, 1, 1, 0),
        3 => array(1, 1, 1, 1, 0),
        4 => array(2, 2, 1, 1, 0),
        10 => array(2, 2, 1, 1, 0),
        11 => array(2, 2, 1, 1, 0),
        12 => array(2, 2, 1, 1, 0)
      ),
      12 => array(
        1 => array(2, 2, 2, 1, 1, 1, 1),
        2 => array(2, 1, 1, 1, 1, 1, 1, 1),
        3 => array(1, 1, 0, 0, 0, 0, 1, 1, 1),
        14 => array(1, 1, 1, 1, 1, 1, 1, 1, 1),
        15 => array(1, 1, 1, 1, 1, 1, 1, 1, 1)
      ),
      13 => array(
        6 => array(2, 2, 2, 0, 0, 1, 1, 1),
        7 => array(2, 2, 2, 1, 1, 1, 1),
        8 => array(2, 2, 2, 1, 1, 1, 1),
        9 => array(2, 2, 2, 0, 0, 0, 1, 1)
      ),
      14 => array(
        3 => array(2, 2, 2, 2, 0, 1, 1, 1, 1),
        4 => array(2, 2, 2, 2, 1, 1, 0, 1, 1),
        5 => array(2, 2, 2, 2, 1, 0, 0, 1, 1)
      ),
      15 => array(
        1 => array(1, 1, 1, 1, 1, 1, 1),
        2 => array(1, 1, 1, 1, 1, 1, 1),
        7 => array(1, 1, 1, 1, 1),
        8 => array(1, 1, 1, 1, 1, 1, 1),
        9 => array(2, 2, 2, 0, 0, 1, 1, 1)
      ),
      16 => array(
        6 => array(1, 1),
        7 => array(1, 1, 0, 1, 1, 1, 1, 1),
        8 => array(1, 1, 1, 1, 1, 1, 1, 1, 1),
        9 => array(1, 1, 1, 0, 0, 0, 0, 1, 1, 1)
      ),
      17 => array(
        1 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        2 => array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        14 => array(2, 1, 1),
        15 => array(2, 1, 1)
      ),
      18 => array(
        6 => array(2, 2, 1, 1, 0, 1, 1),
        7 => array(2, 2, 1, 1, 1, 1, 1),
        8 => array(2, 2, 1, 1, 1, 1, 1),
        9 => array(2, 1, 1, 1, 0, 1, 1, 1)
      ),
      19 => array(
        7 => array(1, 1, 1, 0, 0, 0, 1, 1, 1),
        8 => array(2, 1, 1, 1, 1, 1, 1, 1, 1),
        9 => array(2, 2, 1, 1, 1, 1, 0, 1, 1),
        10 => array(2, 2, 2, 0, 0, 0, 0, 1, 1)
      )
    );
  }

  public function mgArr($pec, $data, $limit)
  {
    global $debug;

    $mgarr = $this->getArr();
    $mgsarr = $this->getSArr();

    $temp = array();

    foreach ($mgarr as $num => $arr) {
      foreach ($arr as $key => $val) {
        foreach ($val as $k => $v) {
          if ($k <= 2)
            continue;
          if ($k >= $limit)
            break;

          ++$temp[$num]['total'];
          if ($data[$key][$k] == $v) {
            ++$temp[$num]['num'];
            //echo $v != 0 ? $data[$key][$k].$v.'  ' : "<font style='color:#FFF;'>".$data[$key][$k].$v."</font>  ";
          } else {
            //echo "<font style='color:#FFF;'>".$data[$key][$k].$v."</font>  ";
          }
        }
        //echo '<br />';
      }
      //echo $temp[$num]['num']/$temp[$num]['total'];
      //echo '<br />';
    }

    $return = $tempmax = $max = 0;
    foreach ($temp as $tkey => $tval) {
      $tempmax = floatval($tval['num'] / $tval['total']);
      $return = $tempmax > $max ? $tkey : $return;
      $max = $tempmax > $max ? $tempmax : $max;
    }

    $return = $max < $pec ? -1 : ($return > 9 ? $return - 10 : $return);
    //echo $return >= 0 ?"<font style='color:#FFF;'>".$max."</font> " : '';
    //echo '<br /><br />';
    if ($debug == 1)
      echo "<br/><br/>";
    if ($debug == 1)
      $this->drawWH($data);
    //echo '<font style="color:red;">(';echo $return;echo ')</font>';

    if ($return >= 0) {
      foreach ($mgsarr as $nownum => $mgsarr_) {
        //if($nownum != 1)
        //{
        //    continue;
        //}
        //echo '<font style="color:red;">[';echo $nownum;echo ']</font>';

        $linenum = $linerightnum = 0;
        foreach ($mgsarr_ as $mgskey => $mgsval) {
          if ($debug == 1)
            echo '<br />';
          ++$linenum;
          //echo "<br />[[$mgskey]]";
          $rownum = $rowrightnum = 0;
          foreach ($mgsval as $mgk => $mgv) {
            if ($debug == 1)
              echo '{' . $data[$mgskey][$mgk] . '-' . $mgv . '}';
            if ($mgv == 2) {
              continue;
            }

            ++$rownum;
            if ($data[$mgskey][$mgk] == $mgv) {
              ++$rowrightnum;
            }
          }
          $linerightnum = $rownum > 0 && $rownum == $rowrightnum ? $linerightnum + 1 : $linerightnum;
          //echo '<font style="color:green;">[';echo $totalnum.'-'.$rightnum;echo ']</font>';
        }
        if ($debug == 1) {
          echo '<br />(' . $nownum . ')<font style="color:green;">[';
          echo $linenum . '-' . $linerightnum;
          echo ']</font>';
        }
        if ($linenum > 0 && $linenum == $linerightnum) {
          return $nownum > 9 ? $nownum - 10 : $nownum;
        }
      }

      $return = -1;
    }

    return $return;
  }

  public function getSize()
  {
    return getimagesize($this->imgPath);
  }

  /**
   * 颜色分离转换...
   *
   * @param unknown_type $path
   * @return unknown
   */
  public function getHec()
  {
    $size = $this->getSize();
    $res = imagecreatefromgif($this->imgPath);
    for ($i = 0; $i < $size[1]; ++$i) {
      for ($j = 0; $j < $size[0]; ++$j) {
        $rgb = imagecolorat($res, $j, $i);
        $rgbarray = imagecolorsforindex($res, $rgb);
        if ($rgbarray['red'] < 125 || $rgbarray['green'] < 125 || $rgbarray['blue'] < 125) {
          $data[$i][$j] = 1;
        } else {
          $data[$i][$j] = 0;
        }
      }
    }
    $this->imgSize = $size;
    $this->hecData = $data;
  }

  /**
   * 颜色分离后的数据横向整理...
   *
   * @return unknown
   */
  public function magHorData($start, $limit, $passfirst = false)
  {

    $data = $this->hecData;
    $size = $this->imgSize;
    $z = 0;

    for ($i = 0; $i < $size[1]; ++$i) {
      $iarr = array();
      $ilength = 0;
      foreach ($data[$i] as $key => $idata) {
        if ($key >= $start) {
          if ($ilength < $limit) {
            $iarr[] = $idata;
            $ilength++;
          } else {
            break;
          }
        }
      }
      if (in_array('1', $iarr)) {
        $z++;
        for ($j = 0; $j < $limit; ++$j) {
          if ($iarr[$j] == '1') {
            $newdata[$z][$j] = 1;
          } else {
            $newdata[$z][$j] = 0;
          }
        }
      }
    }

    if ($passfirst == true) {
      unset($newdata[1]);
      $temparr = array();
      $temp = 1;
      foreach ($newdata as $newval) {
        $temparr[$temp] = $newval;
        ++$temp;
      }
      $newdata = $temparr;
    }

    //print_r($newdata);exit;
    return $this->horData = $newdata;
  }

  /**
   * 整理纵向数据...
   *
   * @return unknown
   */
  public function magVerData($newdata)
  {
    for ($i = 0; $i < 132; ++$i) {
      for ($j = 1; $j < 13; ++$j) {
        $ndata[$i][$j] = $newdata[$j][$i];
      }
    }


    $sum = count($ndata);
    $c = 0;
    for ($a = 0; $a < $sum; $a++) {
      $value = $ndata[$a];
      if (in_array(1, $value)) {
        $ndatas[$c] = $value;
        $c++;
      } elseif (is_array($ndatas)) {
        $b = $c - 1;
        if (in_array(1, $ndatas[$b])) {
          $ndatas[$c] = $value;
          $c++;
        }
      }
    }

    return $this->verData = $ndatas;
  }

  /**
   * 显示电话号码...
   *
   * @return unknown
   */
  public function showPhone($ndatas)
  {
    $phone = null;
    $d = 0;
    foreach ($ndatas as $key => $val) {
      if (in_array(1, $val)) {
        foreach ($val as $k => $v) {
          $ndArr[$d] .= $v;
        }
      }
      if (!in_array(1, $val)) {
        $d++;
      }
    }
    foreach ($ndArr as $key01 => $val01) {
      $phone .= $this->initData($val01);
    }
    return $phone;
  }

  /**
   * 分离显示...
   *
   * @param unknown_type $dataArr
   */
  function drawWH($dataArr)
  {
    if (is_array($dataArr)) {
      foreach ($dataArr as $key => $val) {
        foreach ($val as $k => $v) {
          if ($v == 0) {
            $c .= "<font color='#FFFFFF'>" . $v . "</font>";
          } else {
            $c .= $v;
          }
        }
        $c .= "<br/>";
      }
    }
    echo $c;
  }

}
